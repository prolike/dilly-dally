{"version":3,"sources":["Popovers.spec.js"],"names":["Vue","use","BootstrapVue","describe","it","expect","Popovers","name","toMatch","data","defaultData","show","toBe","wrapper","isVueInstance","is","find","text","test","element","toMatchSnapshot","methods","onOpen","toEqual","vm","toBeUndefined","onClose","onEnable","onDisable"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport { mount, shallowMount } from '@vue/test-utils'\nimport BootstrapVue from 'bootstrap-vue'\nimport Popovers from '@/views/base/Popovers'\n\nVue.use(BootstrapVue)\n\ndescribe('Popovers.vue', () => {\n  it('has a name', () => {\n    expect(Popovers.name).toMatch('popovers')\n  })\n  it('has a created hook', () => {\n    expect(typeof Popovers.data).toMatch('function')\n  })\n  it('sets the correct default data', () => {\n    expect(typeof Popovers.data).toMatch('function')\n    const defaultData = Popovers.data()\n    expect(defaultData.show).toBe(false)\n  })\n  it('is Vue instance', () => {\n    const wrapper = shallowMount(Popovers)\n    expect(wrapper.isVueInstance()).toBe(true)\n  })\n  it('is Popovers', () => {\n    const wrapper = shallowMount(Popovers)\n    expect(wrapper.is(Popovers)).toBe(true)\n  })\n  it('should render correct content', () => {\n    const wrapper = mount(Popovers)\n    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap Popovers')\n  })\n  test('renders correctly', () => {\n    const wrapper = shallowMount(Popovers)\n    expect(wrapper.element).toMatchSnapshot()\n  })\n  it('should have methods', () => {\n    const wrapper = mount(Popovers)\n    expect(typeof Popovers.methods.onOpen).toEqual('function')\n    expect(wrapper.vm.onOpen()).toBeUndefined()\n    expect(typeof Popovers.methods.onClose).toEqual('function')\n    expect(wrapper.vm.onClose()).toBeUndefined()\n    expect(typeof Popovers.methods.onEnable).toEqual('function')\n    expect(wrapper.vm.onEnable()).toBeUndefined()\n    expect(typeof Popovers.methods.onDisable).toEqual('function')\n    expect(wrapper.vm.onDisable()).toBeUndefined()\n  })\n})\n"]}