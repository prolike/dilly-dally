4a561d731683a8066c3fb095a9beb34d
"use strict";

var _interopRequireDefault = require("/home/oem/Desktop/Prolike/dilly-dally/app/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault");

var _vue = _interopRequireDefault(require("vue"));

var _testUtils = require("@vue/test-utils");

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

var _Popovers = _interopRequireDefault(require("@/views/base/Popovers"));

_vue.default.use(_bootstrapVue.default);

describe('Popovers.vue', () => {
  it('has a name', () => {
    expect(_Popovers.default.name).toMatch('popovers');
  });
  it('has a created hook', () => {
    expect(typeof _Popovers.default.data).toMatch('function');
  });
  it('sets the correct default data', () => {
    expect(typeof _Popovers.default.data).toMatch('function');

    const defaultData = _Popovers.default.data();

    expect(defaultData.show).toBe(false);
  });
  it('is Vue instance', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Popovers.default);
    expect(wrapper.isVueInstance()).toBe(true);
  });
  it('is Popovers', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Popovers.default);
    expect(wrapper.is(_Popovers.default)).toBe(true);
  });
  it('should render correct content', () => {
    const wrapper = (0, _testUtils.mount)(_Popovers.default);
    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap Popovers');
  });
  test('renders correctly', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Popovers.default);
    expect(wrapper.element).toMatchSnapshot();
  });
  it('should have methods', () => {
    const wrapper = (0, _testUtils.mount)(_Popovers.default);
    expect(typeof _Popovers.default.methods.onOpen).toEqual('function');
    expect(wrapper.vm.onOpen()).toBeUndefined();
    expect(typeof _Popovers.default.methods.onClose).toEqual('function');
    expect(wrapper.vm.onClose()).toBeUndefined();
    expect(typeof _Popovers.default.methods.onEnable).toEqual('function');
    expect(wrapper.vm.onEnable()).toBeUndefined();
    expect(typeof _Popovers.default.methods.onDisable).toEqual('function');
    expect(wrapper.vm.onDisable()).toBeUndefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvcG92ZXJzLnNwZWMuanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiQm9vdHN0cmFwVnVlIiwiZGVzY3JpYmUiLCJpdCIsImV4cGVjdCIsIlBvcG92ZXJzIiwibmFtZSIsInRvTWF0Y2giLCJkYXRhIiwiZGVmYXVsdERhdGEiLCJzaG93IiwidG9CZSIsIndyYXBwZXIiLCJpc1Z1ZUluc3RhbmNlIiwiaXMiLCJmaW5kIiwidGV4dCIsInRlc3QiLCJlbGVtZW50IiwidG9NYXRjaFNuYXBzaG90IiwibWV0aG9kcyIsIm9uT3BlbiIsInRvRXF1YWwiLCJ2bSIsInRvQmVVbmRlZmluZWQiLCJvbkNsb3NlIiwib25FbmFibGUiLCJvbkRpc2FibGUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQUEsYUFBSUMsR0FBSixDQUFRQyxxQkFBUjs7QUFFQUMsUUFBUSxDQUFDLGNBQUQsRUFBaUIsTUFBTTtBQUM3QkMsRUFBQUEsRUFBRSxDQUFDLFlBQUQsRUFBZSxNQUFNO0FBQ3JCQyxJQUFBQSxNQUFNLENBQUNDLGtCQUFTQyxJQUFWLENBQU4sQ0FBc0JDLE9BQXRCLENBQThCLFVBQTlCO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQyxvQkFBRCxFQUF1QixNQUFNO0FBQzdCQyxJQUFBQSxNQUFNLENBQUMsT0FBT0Msa0JBQVNHLElBQWpCLENBQU4sQ0FBNkJELE9BQTdCLENBQXFDLFVBQXJDO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3hDQyxJQUFBQSxNQUFNLENBQUMsT0FBT0Msa0JBQVNHLElBQWpCLENBQU4sQ0FBNkJELE9BQTdCLENBQXFDLFVBQXJDOztBQUNBLFVBQU1FLFdBQVcsR0FBR0osa0JBQVNHLElBQVQsRUFBcEI7O0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDQyxJQUFiLENBQU4sQ0FBeUJDLElBQXpCLENBQThCLEtBQTlCO0FBQ0QsR0FKQyxDQUFGO0FBS0FSLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixNQUFNO0FBQzFCLFVBQU1TLE9BQU8sR0FBRyw2QkFBYVAsaUJBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNDLGFBQVIsRUFBRCxDQUFOLENBQWdDRixJQUFoQyxDQUFxQyxJQUFyQztBQUNELEdBSEMsQ0FBRjtBQUlBUixFQUFBQSxFQUFFLENBQUMsYUFBRCxFQUFnQixNQUFNO0FBQ3RCLFVBQU1TLE9BQU8sR0FBRyw2QkFBYVAsaUJBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNFLEVBQVIsQ0FBV1QsaUJBQVgsQ0FBRCxDQUFOLENBQTZCTSxJQUE3QixDQUFrQyxJQUFsQztBQUNELEdBSEMsQ0FBRjtBQUlBUixFQUFBQSxFQUFFLENBQUMsK0JBQUQsRUFBa0MsTUFBTTtBQUN4QyxVQUFNUyxPQUFPLEdBQUcsc0JBQU1QLGlCQUFOLENBQWhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ1EsT0FBTyxDQUFDRyxJQUFSLENBQWEsbUNBQWIsRUFBa0RDLElBQWxELEVBQUQsQ0FBTixDQUFpRVQsT0FBakUsQ0FBeUUsb0JBQXpFO0FBQ0QsR0FIQyxDQUFGO0FBSUFVLEVBQUFBLElBQUksQ0FBQyxtQkFBRCxFQUFzQixNQUFNO0FBQzlCLFVBQU1MLE9BQU8sR0FBRyw2QkFBYVAsaUJBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNNLE9BQVQsQ0FBTixDQUF3QkMsZUFBeEI7QUFDRCxHQUhHLENBQUo7QUFJQWhCLEVBQUFBLEVBQUUsQ0FBQyxxQkFBRCxFQUF3QixNQUFNO0FBQzlCLFVBQU1TLE9BQU8sR0FBRyxzQkFBTVAsaUJBQU4sQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGtCQUFTZSxPQUFULENBQWlCQyxNQUF6QixDQUFOLENBQXVDQyxPQUF2QyxDQUErQyxVQUEvQztBQUNBbEIsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNXLEVBQVIsQ0FBV0YsTUFBWCxFQUFELENBQU4sQ0FBNEJHLGFBQTVCO0FBQ0FwQixJQUFBQSxNQUFNLENBQUMsT0FBT0Msa0JBQVNlLE9BQVQsQ0FBaUJLLE9BQXpCLENBQU4sQ0FBd0NILE9BQXhDLENBQWdELFVBQWhEO0FBQ0FsQixJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ1csRUFBUixDQUFXRSxPQUFYLEVBQUQsQ0FBTixDQUE2QkQsYUFBN0I7QUFDQXBCLElBQUFBLE1BQU0sQ0FBQyxPQUFPQyxrQkFBU2UsT0FBVCxDQUFpQk0sUUFBekIsQ0FBTixDQUF5Q0osT0FBekMsQ0FBaUQsVUFBakQ7QUFDQWxCLElBQUFBLE1BQU0sQ0FBQ1EsT0FBTyxDQUFDVyxFQUFSLENBQVdHLFFBQVgsRUFBRCxDQUFOLENBQThCRixhQUE5QjtBQUNBcEIsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGtCQUFTZSxPQUFULENBQWlCTyxTQUF6QixDQUFOLENBQTBDTCxPQUExQyxDQUFrRCxVQUFsRDtBQUNBbEIsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNXLEVBQVIsQ0FBV0ksU0FBWCxFQUFELENBQU4sQ0FBK0JILGFBQS9CO0FBQ0QsR0FWQyxDQUFGO0FBV0QsQ0F2Q08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSAndnVlJ1xuaW1wb3J0IHsgbW91bnQsIHNoYWxsb3dNb3VudCB9IGZyb20gJ0B2dWUvdGVzdC11dGlscydcbmltcG9ydCBCb290c3RyYXBWdWUgZnJvbSAnYm9vdHN0cmFwLXZ1ZSdcbmltcG9ydCBQb3BvdmVycyBmcm9tICdAL3ZpZXdzL2Jhc2UvUG9wb3ZlcnMnXG5cblZ1ZS51c2UoQm9vdHN0cmFwVnVlKVxuXG5kZXNjcmliZSgnUG9wb3ZlcnMudnVlJywgKCkgPT4ge1xuICBpdCgnaGFzIGEgbmFtZScsICgpID0+IHtcbiAgICBleHBlY3QoUG9wb3ZlcnMubmFtZSkudG9NYXRjaCgncG9wb3ZlcnMnKVxuICB9KVxuICBpdCgnaGFzIGEgY3JlYXRlZCBob29rJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0eXBlb2YgUG9wb3ZlcnMuZGF0YSkudG9NYXRjaCgnZnVuY3Rpb24nKVxuICB9KVxuICBpdCgnc2V0cyB0aGUgY29ycmVjdCBkZWZhdWx0IGRhdGEnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHR5cGVvZiBQb3BvdmVycy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gICAgY29uc3QgZGVmYXVsdERhdGEgPSBQb3BvdmVycy5kYXRhKClcbiAgICBleHBlY3QoZGVmYXVsdERhdGEuc2hvdykudG9CZShmYWxzZSlcbiAgfSlcbiAgaXQoJ2lzIFZ1ZSBpbnN0YW5jZScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2hhbGxvd01vdW50KFBvcG92ZXJzKVxuICAgIGV4cGVjdCh3cmFwcGVyLmlzVnVlSW5zdGFuY2UoKSkudG9CZSh0cnVlKVxuICB9KVxuICBpdCgnaXMgUG9wb3ZlcnMnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3dNb3VudChQb3BvdmVycylcbiAgICBleHBlY3Qod3JhcHBlci5pcyhQb3BvdmVycykpLnRvQmUodHJ1ZSlcbiAgfSlcbiAgaXQoJ3Nob3VsZCByZW5kZXIgY29ycmVjdCBjb250ZW50JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChQb3BvdmVycylcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCdoZWFkZXIuY2FyZC1oZWFkZXIgPiBkaXYgPiBzdHJvbmcnKS50ZXh0KCkpLnRvTWF0Y2goJ0Jvb3RzdHJhcCBQb3BvdmVycycpXG4gIH0pXG4gIHRlc3QoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93TW91bnQoUG9wb3ZlcnMpXG4gICAgZXhwZWN0KHdyYXBwZXIuZWxlbWVudCkudG9NYXRjaFNuYXBzaG90KClcbiAgfSlcbiAgaXQoJ3Nob3VsZCBoYXZlIG1ldGhvZHMnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KFBvcG92ZXJzKVxuICAgIGV4cGVjdCh0eXBlb2YgUG9wb3ZlcnMubWV0aG9kcy5vbk9wZW4pLnRvRXF1YWwoJ2Z1bmN0aW9uJylcbiAgICBleHBlY3Qod3JhcHBlci52bS5vbk9wZW4oKSkudG9CZVVuZGVmaW5lZCgpXG4gICAgZXhwZWN0KHR5cGVvZiBQb3BvdmVycy5tZXRob2RzLm9uQ2xvc2UpLnRvRXF1YWwoJ2Z1bmN0aW9uJylcbiAgICBleHBlY3Qod3JhcHBlci52bS5vbkNsb3NlKCkpLnRvQmVVbmRlZmluZWQoKVxuICAgIGV4cGVjdCh0eXBlb2YgUG9wb3ZlcnMubWV0aG9kcy5vbkVuYWJsZSkudG9FcXVhbCgnZnVuY3Rpb24nKVxuICAgIGV4cGVjdCh3cmFwcGVyLnZtLm9uRW5hYmxlKCkpLnRvQmVVbmRlZmluZWQoKVxuICAgIGV4cGVjdCh0eXBlb2YgUG9wb3ZlcnMubWV0aG9kcy5vbkRpc2FibGUpLnRvRXF1YWwoJ2Z1bmN0aW9uJylcbiAgICBleHBlY3Qod3JhcHBlci52bS5vbkRpc2FibGUoKSkudG9CZVVuZGVmaW5lZCgpXG4gIH0pXG59KVxuIl19