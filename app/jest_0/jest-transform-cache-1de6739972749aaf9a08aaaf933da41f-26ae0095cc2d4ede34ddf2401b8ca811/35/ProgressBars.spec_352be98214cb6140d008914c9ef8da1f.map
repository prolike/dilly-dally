{"version":3,"sources":["ProgressBars.spec.js"],"names":["Vue","use","BootstrapVue","jest","useFakeTimers","describe","it","expect","ProgressBars","name","toMatch","data","defaultData","counter","toBe","wrapper","isVueInstance","is","find","text","test","element","toMatchSnapshot","destroy","methods","clicked","toEqual","toBeUndefined"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,aAAIC,GAAJ,CAAQC,qBAAR;;AAEAC,IAAI,CAACC,aAAL;AAEAC,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCC,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,IAAAA,MAAM,CAACC,sBAAaC,IAAd,CAAN,CAA0BC,OAA1B,CAAkC,eAAlC;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7BC,IAAAA,MAAM,CAAC,OAAOC,sBAAaG,IAArB,CAAN,CAAiCD,OAAjC,CAAyC,UAAzC;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxCC,IAAAA,MAAM,CAAC,OAAOC,sBAAaG,IAArB,CAAN,CAAiCD,OAAjC,CAAyC,UAAzC;;AACA,UAAME,WAAW,GAAGJ,sBAAaG,IAAb,EAApB;;AACAJ,IAAAA,MAAM,CAACK,WAAW,CAACC,OAAb,CAAN,CAA4BC,IAA5B,CAAiC,EAAjC;AACD,GAJC,CAAF;AAKAR,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMS,OAAO,GAAG,sBAAMP,qBAAN,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACC,aAAR,EAAD,CAAN,CAAgCF,IAAhC,CAAqC,IAArC;AACD,GAHC,CAAF;AAIAR,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMS,OAAO,GAAG,sBAAMP,qBAAN,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACE,EAAR,CAAWT,qBAAX,CAAD,CAAN,CAAiCM,IAAjC,CAAsC,IAAtC;AACD,GAHC,CAAF;AAIAR,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxC,UAAMS,OAAO,GAAG,sBAAMP,qBAAN,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACG,IAAR,CAAa,mCAAb,EAAkDC,IAAlD,EAAD,CAAN,CAAiET,OAAjE,CAAyE,oBAAzE;AACD,GAHC,CAAF;AAIAU,EAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,UAAML,OAAO,GAAG,6BAAaP,qBAAb,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACM,OAAT,CAAN,CAAwBC,eAAxB;AACD,GAHG,CAAJ;AAIAhB,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC9B,UAAMS,OAAO,GAAG,sBAAMP,qBAAN,CAAhB;AACAO,IAAAA,OAAO,CAACQ,OAAR;AACD,GAHC,CAAF;AAIAjB,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC9BC,IAAAA,MAAM,CAAC,OAAOC,sBAAagB,OAAb,CAAqBC,OAA7B,CAAN,CAA8CC,OAA9C,CAAsD,UAAtD;AACAnB,IAAAA,MAAM,CAACC,sBAAagB,OAAb,CAAqBC,OAArB,EAAD,CAAN,CAAuCE,aAAvC;AACD,GAHC,CAAF;AAID,CApCO,CAAR","sourcesContent":["import Vue from 'vue'\nimport { mount, shallowMount } from '@vue/test-utils';\nimport BootstrapVue from 'bootstrap-vue'\nimport ProgressBars from '@/views/base/ProgressBars'\n\nVue.use(BootstrapVue)\n\njest.useFakeTimers()\n\ndescribe('ProgressBars.vue', () => {\n  it('has a name', () => {\n    expect(ProgressBars.name).toMatch('progress-bars')\n  })\n  it('has a created hook', () => {\n    expect(typeof ProgressBars.data).toMatch('function')\n  })\n  it('sets the correct default data', () => {\n    expect(typeof ProgressBars.data).toMatch('function')\n    const defaultData = ProgressBars.data()\n    expect(defaultData.counter).toBe(45)\n  })\n  it('is Vue instance', () => {\n    const wrapper = mount(ProgressBars)\n    expect(wrapper.isVueInstance()).toBe(true)\n  })\n  it('is ProgressBars', () => {\n    const wrapper = mount(ProgressBars)\n    expect(wrapper.is(ProgressBars)).toBe(true)\n  })\n  it('should render correct content', () => {\n    const wrapper = mount(ProgressBars)\n    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap Progress')\n  })\n  test('renders correctly', () => {\n    const wrapper = shallowMount(ProgressBars)\n    expect(wrapper.element).toMatchSnapshot()\n  })\n  it('should be destroyed', () => {\n    const wrapper = mount(ProgressBars)\n    wrapper.destroy()\n  })\n  it('should have methods', () => {\n    expect(typeof ProgressBars.methods.clicked  ).toEqual('function')\n    expect(ProgressBars.methods.clicked()).toBeUndefined()\n  })\n})\n"]}