{"version":3,"sources":["Widgets.spec.js"],"names":["Vue","use","BootstrapVue","describe","it","expect","Widgets","name","toMatch","data","defaultData","msg","wrapper","isVueInstance","toBe","is","test","element","toMatchSnapshot"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,aAAIC,GAAJ,CAAQC,qBAAR;;AAEAC,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BC,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,IAAAA,MAAM,CAACC,iBAAQC,IAAT,CAAN,CAAqBC,OAArB,CAA6B,SAA7B;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7BC,IAAAA,MAAM,CAAC,OAAOC,iBAAQG,IAAhB,CAAN,CAA4BD,OAA5B,CAAoC,UAApC;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxCC,IAAAA,MAAM,CAAC,OAAOC,iBAAQG,IAAhB,CAAN,CAA4BD,OAA5B,CAAoC,UAApC;;AACA,UAAME,WAAW,GAAGJ,iBAAQG,IAAR,EAApB;;AACAJ,IAAAA,MAAM,CAACK,WAAW,CAACC,GAAb,CAAN,CAAwBH,OAAxB,CAAgC,SAAhC;AACD,GAJC,CAAF;AAKAJ,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMQ,OAAO,GAAG,6BAAaN,gBAAb,CAAhB;AACAD,IAAAA,MAAM,CAACO,OAAO,CAACC,aAAR,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,IAArC;AACD,GAHC,CAAF;AAIAV,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrB,UAAMQ,OAAO,GAAG,6BAAaN,gBAAb,CAAhB;AACAD,IAAAA,MAAM,CAACO,OAAO,CAACG,EAAR,CAAWT,gBAAX,CAAD,CAAN,CAA4BQ,IAA5B,CAAiC,IAAjC;AACD,GAHC,CAAF;AAIAE,EAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,UAAMJ,OAAO,GAAG,6BAAaN,gBAAb,CAAhB;AACAD,IAAAA,MAAM,CAACO,OAAO,CAACK,OAAT,CAAN,CAAwBC,eAAxB;AACD,GAHG,CAAJ;AAID,CAxBO,CAAR","sourcesContent":["import Vue from 'vue'\nimport { shallowMount } from '@vue/test-utils'\nimport BootstrapVue from 'bootstrap-vue'\nimport Widgets from '@/views/Widgets'\n\nVue.use(BootstrapVue)\n\ndescribe('Widgets.vue', () => {\n  it('has a name', () => {\n    expect(Widgets.name).toMatch('widgets')\n  })\n  it('has a created hook', () => {\n    expect(typeof Widgets.data).toMatch('function')\n  })\n  it('sets the correct default data', () => {\n    expect(typeof Widgets.data).toMatch('function')\n    const defaultData = Widgets.data()\n    expect(defaultData.msg).toMatch('Widgets')\n  })\n  it('is Vue instance', () => {\n    const wrapper = shallowMount(Widgets)\n    expect(wrapper.isVueInstance()).toBe(true)\n  })\n  it('is Widgets', () => {\n    const wrapper = shallowMount(Widgets)\n    expect(wrapper.is(Widgets)).toBe(true)\n  })\n  test('renders correctly', () => {\n    const wrapper = shallowMount(Widgets)\n    expect(wrapper.element).toMatchSnapshot()\n  })\n})\n"]}