{"version":3,"sources":["ListGroups.spec.js"],"names":["Vue","use","BootstrapVue","describe","it","expect","ListGroups","name","toMatch","wrapper","isVueInstance","toBe","is","find","text","test","element","toMatchSnapshot"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,aAAIC,GAAJ,CAAQC,qBAAR;;AAEAC,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BC,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,IAAAA,MAAM,CAACC,oBAAWC,IAAZ,CAAN,CAAwBC,OAAxB,CAAgC,aAAhC;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMK,OAAO,GAAG,6BAAaH,mBAAb,CAAhB;AACAD,IAAAA,MAAM,CAACI,OAAO,CAACC,aAAR,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,IAArC;AACD,GAHC,CAAF;AAIAP,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACxB,UAAMK,OAAO,GAAG,6BAAaH,mBAAb,CAAhB;AACAD,IAAAA,MAAM,CAACI,OAAO,CAACG,EAAR,CAAWN,mBAAX,CAAD,CAAN,CAA+BK,IAA/B,CAAoC,IAApC;AACD,GAHC,CAAF;AAIAP,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxC,UAAMK,OAAO,GAAG,sBAAMH,mBAAN,CAAhB;AACAD,IAAAA,MAAM,CAACI,OAAO,CAACI,IAAR,CAAa,mCAAb,EAAkDC,IAAlD,EAAD,CAAN,CAAiEN,OAAjE,CAAyE,sBAAzE;AACD,GAHC,CAAF;AAIAO,EAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,UAAMN,OAAO,GAAG,6BAAaH,mBAAb,CAAhB;AACAD,IAAAA,MAAM,CAACI,OAAO,CAACO,OAAT,CAAN,CAAwBC,eAAxB;AACD,GAHG,CAAJ;AAID,CApBO,CAAR","sourcesContent":["import Vue from 'vue'\nimport { shallowMount, mount } from '@vue/test-utils'\nimport BootstrapVue from 'bootstrap-vue'\nimport ListGroups from '@/views/base/ListGroups'\n\nVue.use(BootstrapVue)\n\ndescribe('ListGroups.vue', () => {\n  it('has a name', () => {\n    expect(ListGroups.name).toMatch('list-groups')\n  })\n  it('is Vue instance', () => {\n    const wrapper = shallowMount(ListGroups)\n    expect(wrapper.isVueInstance()).toBe(true)\n  })\n  it('is ListGroups', () => {\n    const wrapper = shallowMount(ListGroups)\n    expect(wrapper.is(ListGroups)).toBe(true)\n  })\n  it('should render correct content', () => {\n    const wrapper = mount(ListGroups)\n    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap list group')\n  })\n  test('renders correctly', () => {\n    const wrapper = shallowMount(ListGroups)\n    expect(wrapper.element).toMatchSnapshot()\n  })\n})\n"]}