bd3a4015330ffcc530441f504d4843fd
"use strict";

var _interopRequireDefault = require("/home/oem/Desktop/Prolike/dilly-dally/app/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault");

var _vue = _interopRequireDefault(require("vue"));

var _testUtils = require("@vue/test-utils");

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

var _Breadcrumbs = _interopRequireDefault(require("@/views/base/Breadcrumbs"));

_vue.default.use(_bootstrapVue.default);

describe('Breadcrumbs.vue', () => {
  it('has a name', () => {
    expect(_Breadcrumbs.default.name).toMatch('breadcrumbs');
  });
  it('has a created hook', () => {
    expect(typeof _Breadcrumbs.default.data).toMatch('function');
  });
  it('sets the correct default data', () => {
    expect(typeof _Breadcrumbs.default.data).toMatch('function');

    const defaultData = _Breadcrumbs.default.data();

    expect(typeof defaultData.items).toMatch('object');
  });
  it('is Vue instance', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Breadcrumbs.default);
    expect(wrapper.isVueInstance()).toBe(true);
  });
  it('is Breadcrumbs', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Breadcrumbs.default);
    expect(wrapper.is(_Breadcrumbs.default)).toBe(true);
  });
  it('should render correct content', () => {
    const wrapper = (0, _testUtils.mount)(_Breadcrumbs.default);
    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap Breadcrumb');
  });
  test('renders correctly', () => {
    const wrapper = (0, _testUtils.mount)(_Breadcrumbs.default);
    expect(wrapper.element).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJyZWFkY3J1bWJzLnNwZWMuanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiQm9vdHN0cmFwVnVlIiwiZGVzY3JpYmUiLCJpdCIsImV4cGVjdCIsIkJyZWFkY3J1bWJzIiwibmFtZSIsInRvTWF0Y2giLCJkYXRhIiwiZGVmYXVsdERhdGEiLCJpdGVtcyIsIndyYXBwZXIiLCJpc1Z1ZUluc3RhbmNlIiwidG9CZSIsImlzIiwiZmluZCIsInRleHQiLCJ0ZXN0IiwiZWxlbWVudCIsInRvTWF0Y2hTbmFwc2hvdCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxhQUFJQyxHQUFKLENBQVFDLHFCQUFSOztBQUVBQyxRQUFRLENBQUMsaUJBQUQsRUFBb0IsTUFBTTtBQUNoQ0MsRUFBQUEsRUFBRSxDQUFDLFlBQUQsRUFBZSxNQUFNO0FBQ3JCQyxJQUFBQSxNQUFNLENBQUNDLHFCQUFZQyxJQUFiLENBQU4sQ0FBeUJDLE9BQXpCLENBQWlDLGFBQWpDO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQyxvQkFBRCxFQUF1QixNQUFNO0FBQzdCQyxJQUFBQSxNQUFNLENBQUMsT0FBT0MscUJBQVlHLElBQXBCLENBQU4sQ0FBZ0NELE9BQWhDLENBQXdDLFVBQXhDO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3hDQyxJQUFBQSxNQUFNLENBQUMsT0FBT0MscUJBQVlHLElBQXBCLENBQU4sQ0FBZ0NELE9BQWhDLENBQXdDLFVBQXhDOztBQUNBLFVBQU1FLFdBQVcsR0FBR0oscUJBQVlHLElBQVosRUFBcEI7O0FBQ0FKLElBQUFBLE1BQU0sQ0FBQyxPQUFPSyxXQUFXLENBQUNDLEtBQXBCLENBQU4sQ0FBaUNILE9BQWpDLENBQXlDLFFBQXpDO0FBQ0QsR0FKQyxDQUFGO0FBS0FKLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixNQUFNO0FBQzFCLFVBQU1RLE9BQU8sR0FBRyw2QkFBYU4sb0JBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDTyxPQUFPLENBQUNDLGFBQVIsRUFBRCxDQUFOLENBQWdDQyxJQUFoQyxDQUFxQyxJQUFyQztBQUNELEdBSEMsQ0FBRjtBQUlBVixFQUFBQSxFQUFFLENBQUMsZ0JBQUQsRUFBbUIsTUFBTTtBQUN6QixVQUFNUSxPQUFPLEdBQUcsNkJBQWFOLG9CQUFiLENBQWhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ08sT0FBTyxDQUFDRyxFQUFSLENBQVdULG9CQUFYLENBQUQsQ0FBTixDQUFnQ1EsSUFBaEMsQ0FBcUMsSUFBckM7QUFDRCxHQUhDLENBQUY7QUFJQVYsRUFBQUEsRUFBRSxDQUFDLCtCQUFELEVBQWtDLE1BQU07QUFDeEMsVUFBTVEsT0FBTyxHQUFHLHNCQUFNTixvQkFBTixDQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNPLE9BQU8sQ0FBQ0ksSUFBUixDQUFhLG1DQUFiLEVBQWtEQyxJQUFsRCxFQUFELENBQU4sQ0FBaUVULE9BQWpFLENBQXlFLHNCQUF6RTtBQUNELEdBSEMsQ0FBRjtBQUlBVSxFQUFBQSxJQUFJLENBQUMsbUJBQUQsRUFBc0IsTUFBTTtBQUM5QixVQUFNTixPQUFPLEdBQUcsc0JBQU1OLG9CQUFOLENBQWhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ08sT0FBTyxDQUFDTyxPQUFULENBQU4sQ0FBd0JDLGVBQXhCO0FBQ0QsR0FIRyxDQUFKO0FBSUQsQ0E1Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSAndnVlJ1xuaW1wb3J0IHsgc2hhbGxvd01vdW50LCBtb3VudCB9IGZyb20gJ0B2dWUvdGVzdC11dGlscydcbmltcG9ydCBCb290c3RyYXBWdWUgZnJvbSAnYm9vdHN0cmFwLXZ1ZSdcbmltcG9ydCBCcmVhZGNydW1icyBmcm9tICdAL3ZpZXdzL2Jhc2UvQnJlYWRjcnVtYnMnXG5cblZ1ZS51c2UoQm9vdHN0cmFwVnVlKVxuXG5kZXNjcmliZSgnQnJlYWRjcnVtYnMudnVlJywgKCkgPT4ge1xuICBpdCgnaGFzIGEgbmFtZScsICgpID0+IHtcbiAgICBleHBlY3QoQnJlYWRjcnVtYnMubmFtZSkudG9NYXRjaCgnYnJlYWRjcnVtYnMnKVxuICB9KVxuICBpdCgnaGFzIGEgY3JlYXRlZCBob29rJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0eXBlb2YgQnJlYWRjcnVtYnMuZGF0YSkudG9NYXRjaCgnZnVuY3Rpb24nKVxuICB9KVxuICBpdCgnc2V0cyB0aGUgY29ycmVjdCBkZWZhdWx0IGRhdGEnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHR5cGVvZiBCcmVhZGNydW1icy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gICAgY29uc3QgZGVmYXVsdERhdGEgPSBCcmVhZGNydW1icy5kYXRhKClcbiAgICBleHBlY3QodHlwZW9mIGRlZmF1bHREYXRhLml0ZW1zKS50b01hdGNoKCdvYmplY3QnKVxuICB9KVxuICBpdCgnaXMgVnVlIGluc3RhbmNlJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93TW91bnQoQnJlYWRjcnVtYnMpXG4gICAgZXhwZWN0KHdyYXBwZXIuaXNWdWVJbnN0YW5jZSgpKS50b0JlKHRydWUpXG4gIH0pXG4gIGl0KCdpcyBCcmVhZGNydW1icycsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2hhbGxvd01vdW50KEJyZWFkY3J1bWJzKVxuICAgIGV4cGVjdCh3cmFwcGVyLmlzKEJyZWFkY3J1bWJzKSkudG9CZSh0cnVlKVxuICB9KVxuICBpdCgnc2hvdWxkIHJlbmRlciBjb3JyZWN0IGNvbnRlbnQnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KEJyZWFkY3J1bWJzKVxuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJ2hlYWRlci5jYXJkLWhlYWRlciA+IGRpdiA+IHN0cm9uZycpLnRleHQoKSkudG9NYXRjaCgnQm9vdHN0cmFwIEJyZWFkY3J1bWInKVxuICB9KVxuICB0ZXN0KCdyZW5kZXJzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoQnJlYWRjcnVtYnMpXG4gICAgZXhwZWN0KHdyYXBwZXIuZWxlbWVudCkudG9NYXRjaFNuYXBzaG90KClcbiAgfSlcbn0pXG4iXX0=