f4a1c049fc149ee91d31ae0ab55c7af3
"use strict";

var _interopRequireDefault = require("/home/oem/Desktop/Prolike/dilly-dally/app/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault");

var _vue = _interopRequireDefault(require("vue"));

var _testUtils = require("@vue/test-utils");

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

var _StandardButtons = _interopRequireDefault(require("@/views/buttons/StandardButtons"));

_vue.default.use(_bootstrapVue.default);

describe('StandardButtons.vue', () => {
  it('has a name', () => {
    expect(_StandardButtons.default.name).toMatch('standard-buttons');
  });
  it('has a created hook', () => {
    expect(typeof _StandardButtons.default.data).toMatch('function');
  });
  it('sets the correct default data', () => {
    expect(typeof _StandardButtons.default.data).toMatch('function');

    const defaultData = _StandardButtons.default.data();

    expect(defaultData.togglePress).toBe(false);
  });
  it('is Vue instance', () => {
    const wrapper = (0, _testUtils.shallowMount)(_StandardButtons.default);
    expect(wrapper.isVueInstance()).toBe(true);
  });
  it('is StandardButtons', () => {
    const wrapper = (0, _testUtils.shallowMount)(_StandardButtons.default);
    expect(wrapper.is(_StandardButtons.default)).toBe(true);
  });
  it('should render correct content', () => {
    const wrapper = (0, _testUtils.mount)(_StandardButtons.default);
    expect(wrapper.find('div.card-header > strong').text()).toMatch('Standard buttons');
    expect(wrapper.find('div.card-header > div > strong').text()).toMatch('Toggle pressed state');
  });
  test('renders correctly', () => {
    const wrapper = (0, _testUtils.shallowMount)(_StandardButtons.default);
    expect(wrapper.element).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0YW5kYXJkQnV0dG9ucy5zcGVjLmpzIl0sIm5hbWVzIjpbIlZ1ZSIsInVzZSIsIkJvb3RzdHJhcFZ1ZSIsImRlc2NyaWJlIiwiaXQiLCJleHBlY3QiLCJTdGFuZGFyZEJ1dHRvbnMiLCJuYW1lIiwidG9NYXRjaCIsImRhdGEiLCJkZWZhdWx0RGF0YSIsInRvZ2dsZVByZXNzIiwidG9CZSIsIndyYXBwZXIiLCJpc1Z1ZUluc3RhbmNlIiwiaXMiLCJmaW5kIiwidGV4dCIsInRlc3QiLCJlbGVtZW50IiwidG9NYXRjaFNuYXBzaG90Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUFBLGFBQUlDLEdBQUosQ0FBUUMscUJBQVI7O0FBRUFDLFFBQVEsQ0FBQyxxQkFBRCxFQUF3QixNQUFNO0FBQ3BDQyxFQUFBQSxFQUFFLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDckJDLElBQUFBLE1BQU0sQ0FBQ0MseUJBQWdCQyxJQUFqQixDQUFOLENBQTZCQyxPQUE3QixDQUFxQyxrQkFBckM7QUFDRCxHQUZDLENBQUY7QUFHQUosRUFBQUEsRUFBRSxDQUFDLG9CQUFELEVBQXVCLE1BQU07QUFDN0JDLElBQUFBLE1BQU0sQ0FBQyxPQUFPQyx5QkFBZ0JHLElBQXhCLENBQU4sQ0FBb0NELE9BQXBDLENBQTRDLFVBQTVDO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3hDQyxJQUFBQSxNQUFNLENBQUMsT0FBT0MseUJBQWdCRyxJQUF4QixDQUFOLENBQW9DRCxPQUFwQyxDQUE0QyxVQUE1Qzs7QUFDQSxVQUFNRSxXQUFXLEdBQUdKLHlCQUFnQkcsSUFBaEIsRUFBcEI7O0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDQyxXQUFiLENBQU4sQ0FBZ0NDLElBQWhDLENBQXFDLEtBQXJDO0FBQ0QsR0FKQyxDQUFGO0FBS0FSLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixNQUFNO0FBQzFCLFVBQU1TLE9BQU8sR0FBRyw2QkFBYVAsd0JBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNDLGFBQVIsRUFBRCxDQUFOLENBQWdDRixJQUFoQyxDQUFxQyxJQUFyQztBQUNELEdBSEMsQ0FBRjtBQUlBUixFQUFBQSxFQUFFLENBQUMsb0JBQUQsRUFBdUIsTUFBTTtBQUM3QixVQUFNUyxPQUFPLEdBQUcsNkJBQWFQLHdCQUFiLENBQWhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ1EsT0FBTyxDQUFDRSxFQUFSLENBQVdULHdCQUFYLENBQUQsQ0FBTixDQUFvQ00sSUFBcEMsQ0FBeUMsSUFBekM7QUFDRCxHQUhDLENBQUY7QUFJQVIsRUFBQUEsRUFBRSxDQUFDLCtCQUFELEVBQWtDLE1BQU07QUFDeEMsVUFBTVMsT0FBTyxHQUFHLHNCQUFNUCx3QkFBTixDQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0csSUFBUixDQUFhLDBCQUFiLEVBQXlDQyxJQUF6QyxFQUFELENBQU4sQ0FBd0RULE9BQXhELENBQWdFLGtCQUFoRTtBQUNBSCxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0csSUFBUixDQUFhLGdDQUFiLEVBQStDQyxJQUEvQyxFQUFELENBQU4sQ0FBOERULE9BQTlELENBQXNFLHNCQUF0RTtBQUNELEdBSkMsQ0FBRjtBQUtBVSxFQUFBQSxJQUFJLENBQUMsbUJBQUQsRUFBc0IsTUFBTTtBQUM5QixVQUFNTCxPQUFPLEdBQUcsNkJBQWFQLHdCQUFiLENBQWhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ1EsT0FBTyxDQUFDTSxPQUFULENBQU4sQ0FBd0JDLGVBQXhCO0FBQ0QsR0FIRyxDQUFKO0FBSUQsQ0E3Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSAndnVlJ1xuaW1wb3J0IHsgc2hhbGxvd01vdW50LCBtb3VudCB9IGZyb20gJ0B2dWUvdGVzdC11dGlscydcbmltcG9ydCBCb290c3RyYXBWdWUgZnJvbSAnYm9vdHN0cmFwLXZ1ZSdcbmltcG9ydCBTdGFuZGFyZEJ1dHRvbnMgZnJvbSAnQC92aWV3cy9idXR0b25zL1N0YW5kYXJkQnV0dG9ucydcblxuVnVlLnVzZShCb290c3RyYXBWdWUpXG5cbmRlc2NyaWJlKCdTdGFuZGFyZEJ1dHRvbnMudnVlJywgKCkgPT4ge1xuICBpdCgnaGFzIGEgbmFtZScsICgpID0+IHtcbiAgICBleHBlY3QoU3RhbmRhcmRCdXR0b25zLm5hbWUpLnRvTWF0Y2goJ3N0YW5kYXJkLWJ1dHRvbnMnKVxuICB9KVxuICBpdCgnaGFzIGEgY3JlYXRlZCBob29rJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0eXBlb2YgU3RhbmRhcmRCdXR0b25zLmRhdGEpLnRvTWF0Y2goJ2Z1bmN0aW9uJylcbiAgfSlcbiAgaXQoJ3NldHMgdGhlIGNvcnJlY3QgZGVmYXVsdCBkYXRhJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0eXBlb2YgU3RhbmRhcmRCdXR0b25zLmRhdGEpLnRvTWF0Y2goJ2Z1bmN0aW9uJylcbiAgICBjb25zdCBkZWZhdWx0RGF0YSA9IFN0YW5kYXJkQnV0dG9ucy5kYXRhKClcbiAgICBleHBlY3QoZGVmYXVsdERhdGEudG9nZ2xlUHJlc3MpLnRvQmUoZmFsc2UpXG4gIH0pXG4gIGl0KCdpcyBWdWUgaW5zdGFuY2UnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3dNb3VudChTdGFuZGFyZEJ1dHRvbnMpXG4gICAgZXhwZWN0KHdyYXBwZXIuaXNWdWVJbnN0YW5jZSgpKS50b0JlKHRydWUpXG4gIH0pXG4gIGl0KCdpcyBTdGFuZGFyZEJ1dHRvbnMnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3dNb3VudChTdGFuZGFyZEJ1dHRvbnMpXG4gICAgZXhwZWN0KHdyYXBwZXIuaXMoU3RhbmRhcmRCdXR0b25zKSkudG9CZSh0cnVlKVxuICB9KVxuICBpdCgnc2hvdWxkIHJlbmRlciBjb3JyZWN0IGNvbnRlbnQnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KFN0YW5kYXJkQnV0dG9ucylcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCdkaXYuY2FyZC1oZWFkZXIgPiBzdHJvbmcnKS50ZXh0KCkpLnRvTWF0Y2goJ1N0YW5kYXJkIGJ1dHRvbnMnKVxuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJ2Rpdi5jYXJkLWhlYWRlciA+IGRpdiA+IHN0cm9uZycpLnRleHQoKSkudG9NYXRjaCgnVG9nZ2xlIHByZXNzZWQgc3RhdGUnKVxuICB9KVxuICB0ZXN0KCdyZW5kZXJzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2hhbGxvd01vdW50KFN0YW5kYXJkQnV0dG9ucylcbiAgICBleHBlY3Qod3JhcHBlci5lbGVtZW50KS50b01hdGNoU25hcHNob3QoKVxuICB9KVxufSlcbiJdfQ==