{"version":3,"sources":["Alerts.spec.js"],"names":["Vue","use","BootstrapVue","describe","it","expect","Alerts","name","toMatch","data","defaultData","showDismissibleAlert","toBe","wrapper","isVueInstance","is","find","text","test","element","toMatchSnapshot","methods","showAlert","toEqual","toBeUndefined","countDownChanged"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,aAAIC,GAAJ,CAAQC,qBAAR;;AAEAC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BC,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,IAAAA,MAAM,CAACC,gBAAOC,IAAR,CAAN,CAAoBC,OAApB,CAA4B,QAA5B;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7BC,IAAAA,MAAM,CAAC,OAAOC,gBAAOG,IAAf,CAAN,CAA2BD,OAA3B,CAAmC,UAAnC;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxCC,IAAAA,MAAM,CAAC,OAAOC,gBAAOG,IAAf,CAAN,CAA2BD,OAA3B,CAAmC,UAAnC;;AACA,UAAME,WAAW,GAAGJ,gBAAOG,IAAP,EAApB;;AACAJ,IAAAA,MAAM,CAACK,WAAW,CAACC,oBAAb,CAAN,CAAyCC,IAAzC,CAA8C,KAA9C;AACD,GAJC,CAAF;AAKAR,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMS,OAAO,GAAG,6BAAaP,eAAb,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACC,aAAR,EAAD,CAAN,CAAgCF,IAAhC,CAAqC,IAArC;AACD,GAHC,CAAF;AAIAR,EAAAA,EAAE,CAAC,WAAD,EAAc,MAAM;AACpB,UAAMS,OAAO,GAAG,6BAAaP,eAAb,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACE,EAAR,CAAWT,eAAX,CAAD,CAAN,CAA2BM,IAA3B,CAAgC,IAAhC;AACD,GAHC,CAAF;AAIAR,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxC,UAAMS,OAAO,GAAG,sBAAMP,eAAN,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACG,IAAR,CAAa,0BAAb,EAAyCC,IAAzC,EAAD,CAAN,CAAwDT,OAAxD,CAAgE,sBAAhE;AACD,GAHC,CAAF;AAIAU,EAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,UAAML,OAAO,GAAG,sBAAMP,eAAN,CAAhB;AACAD,IAAAA,MAAM,CAACQ,OAAO,CAACM,OAAT,CAAN,CAAwBC,eAAxB;AACD,GAHG,CAAJ;AAIAhB,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC9BC,IAAAA,MAAM,CAAC,OAAOC,gBAAOe,OAAP,CAAeC,SAAvB,CAAN,CAAyCC,OAAzC,CAAiD,UAAjD;AACAlB,IAAAA,MAAM,CAACC,gBAAOe,OAAP,CAAeC,SAAf,EAAD,CAAN,CAAmCE,aAAnC;AACAnB,IAAAA,MAAM,CAAC,OAAOC,gBAAOe,OAAP,CAAeI,gBAAvB,CAAN,CAAgDF,OAAhD,CAAwD,UAAxD;AACAlB,IAAAA,MAAM,CAACC,gBAAOe,OAAP,CAAeI,gBAAf,CAAgC,EAAhC,CAAD,CAAN,CAA4CD,aAA5C;AACD,GALC,CAAF;AAMD,CAlCO,CAAR","sourcesContent":["import Vue from 'vue'\nimport { shallowMount, mount } from '@vue/test-utils'\nimport BootstrapVue from 'bootstrap-vue'\nimport Alerts from '@/views/notifications/Alerts'\n\nVue.use(BootstrapVue)\n\ndescribe('Alerts.vue', () => {\n  it('has a name', () => {\n    expect(Alerts.name).toMatch('alerts')\n  })\n  it('has a created hook', () => {\n    expect(typeof Alerts.data).toMatch('function')\n  })\n  it('sets the correct default data', () => {\n    expect(typeof Alerts.data).toMatch('function')\n    const defaultData = Alerts.data()\n    expect(defaultData.showDismissibleAlert).toBe(false)\n  })\n  it('is Vue instance', () => {\n    const wrapper = shallowMount(Alerts)\n    expect(wrapper.isVueInstance()).toBe(true)\n  })\n  it('is Alerts', () => {\n    const wrapper = shallowMount(Alerts)\n    expect(wrapper.is(Alerts)).toBe(true)\n  })\n  it('should render correct content', () => {\n    const wrapper = mount(Alerts)\n    expect(wrapper.find('header.card-header > div').text()).toMatch('Bootstrap Alert docs')\n  })\n  test('renders correctly', () => {\n    const wrapper = mount(Alerts)\n    expect(wrapper.element).toMatchSnapshot()\n  })\n  it('should have methods', () => {\n    expect(typeof Alerts.methods.showAlert ).toEqual('function')\n    expect(Alerts.methods.showAlert()).toBeUndefined()\n    expect(typeof Alerts.methods.countDownChanged ).toEqual('function')\n    expect(Alerts.methods.countDownChanged(10)).toBeUndefined()\n  })\n})\n"]}