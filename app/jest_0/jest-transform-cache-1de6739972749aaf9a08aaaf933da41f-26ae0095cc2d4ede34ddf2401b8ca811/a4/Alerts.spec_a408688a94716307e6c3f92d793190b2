59a4df5b221e00ebe9a70494503073a4
"use strict";

var _interopRequireDefault = require("/home/oem/Desktop/Prolike/dilly-dally/app/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault");

var _vue = _interopRequireDefault(require("vue"));

var _testUtils = require("@vue/test-utils");

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

var _Alerts = _interopRequireDefault(require("@/views/notifications/Alerts"));

_vue.default.use(_bootstrapVue.default);

describe('Alerts.vue', () => {
  it('has a name', () => {
    expect(_Alerts.default.name).toMatch('alerts');
  });
  it('has a created hook', () => {
    expect(typeof _Alerts.default.data).toMatch('function');
  });
  it('sets the correct default data', () => {
    expect(typeof _Alerts.default.data).toMatch('function');

    const defaultData = _Alerts.default.data();

    expect(defaultData.showDismissibleAlert).toBe(false);
  });
  it('is Vue instance', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Alerts.default);
    expect(wrapper.isVueInstance()).toBe(true);
  });
  it('is Alerts', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Alerts.default);
    expect(wrapper.is(_Alerts.default)).toBe(true);
  });
  it('should render correct content', () => {
    const wrapper = (0, _testUtils.mount)(_Alerts.default);
    expect(wrapper.find('header.card-header > div').text()).toMatch('Bootstrap Alert docs');
  });
  test('renders correctly', () => {
    const wrapper = (0, _testUtils.mount)(_Alerts.default);
    expect(wrapper.element).toMatchSnapshot();
  });
  it('should have methods', () => {
    expect(typeof _Alerts.default.methods.showAlert).toEqual('function');
    expect(_Alerts.default.methods.showAlert()).toBeUndefined();
    expect(typeof _Alerts.default.methods.countDownChanged).toEqual('function');
    expect(_Alerts.default.methods.countDownChanged(10)).toBeUndefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFsZXJ0cy5zcGVjLmpzIl0sIm5hbWVzIjpbIlZ1ZSIsInVzZSIsIkJvb3RzdHJhcFZ1ZSIsImRlc2NyaWJlIiwiaXQiLCJleHBlY3QiLCJBbGVydHMiLCJuYW1lIiwidG9NYXRjaCIsImRhdGEiLCJkZWZhdWx0RGF0YSIsInNob3dEaXNtaXNzaWJsZUFsZXJ0IiwidG9CZSIsIndyYXBwZXIiLCJpc1Z1ZUluc3RhbmNlIiwiaXMiLCJmaW5kIiwidGV4dCIsInRlc3QiLCJlbGVtZW50IiwidG9NYXRjaFNuYXBzaG90IiwibWV0aG9kcyIsInNob3dBbGVydCIsInRvRXF1YWwiLCJ0b0JlVW5kZWZpbmVkIiwiY291bnREb3duQ2hhbmdlZCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxhQUFJQyxHQUFKLENBQVFDLHFCQUFSOztBQUVBQyxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDM0JDLEVBQUFBLEVBQUUsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUNyQkMsSUFBQUEsTUFBTSxDQUFDQyxnQkFBT0MsSUFBUixDQUFOLENBQW9CQyxPQUFwQixDQUE0QixRQUE1QjtBQUNELEdBRkMsQ0FBRjtBQUdBSixFQUFBQSxFQUFFLENBQUMsb0JBQUQsRUFBdUIsTUFBTTtBQUM3QkMsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGdCQUFPRyxJQUFmLENBQU4sQ0FBMkJELE9BQTNCLENBQW1DLFVBQW5DO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3hDQyxJQUFBQSxNQUFNLENBQUMsT0FBT0MsZ0JBQU9HLElBQWYsQ0FBTixDQUEyQkQsT0FBM0IsQ0FBbUMsVUFBbkM7O0FBQ0EsVUFBTUUsV0FBVyxHQUFHSixnQkFBT0csSUFBUCxFQUFwQjs7QUFDQUosSUFBQUEsTUFBTSxDQUFDSyxXQUFXLENBQUNDLG9CQUFiLENBQU4sQ0FBeUNDLElBQXpDLENBQThDLEtBQTlDO0FBQ0QsR0FKQyxDQUFGO0FBS0FSLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixNQUFNO0FBQzFCLFVBQU1TLE9BQU8sR0FBRyw2QkFBYVAsZUFBYixDQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0MsYUFBUixFQUFELENBQU4sQ0FBZ0NGLElBQWhDLENBQXFDLElBQXJDO0FBQ0QsR0FIQyxDQUFGO0FBSUFSLEVBQUFBLEVBQUUsQ0FBQyxXQUFELEVBQWMsTUFBTTtBQUNwQixVQUFNUyxPQUFPLEdBQUcsNkJBQWFQLGVBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNFLEVBQVIsQ0FBV1QsZUFBWCxDQUFELENBQU4sQ0FBMkJNLElBQTNCLENBQWdDLElBQWhDO0FBQ0QsR0FIQyxDQUFGO0FBSUFSLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3hDLFVBQU1TLE9BQU8sR0FBRyxzQkFBTVAsZUFBTixDQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0csSUFBUixDQUFhLDBCQUFiLEVBQXlDQyxJQUF6QyxFQUFELENBQU4sQ0FBd0RULE9BQXhELENBQWdFLHNCQUFoRTtBQUNELEdBSEMsQ0FBRjtBQUlBVSxFQUFBQSxJQUFJLENBQUMsbUJBQUQsRUFBc0IsTUFBTTtBQUM5QixVQUFNTCxPQUFPLEdBQUcsc0JBQU1QLGVBQU4sQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNNLE9BQVQsQ0FBTixDQUF3QkMsZUFBeEI7QUFDRCxHQUhHLENBQUo7QUFJQWhCLEVBQUFBLEVBQUUsQ0FBQyxxQkFBRCxFQUF3QixNQUFNO0FBQzlCQyxJQUFBQSxNQUFNLENBQUMsT0FBT0MsZ0JBQU9lLE9BQVAsQ0FBZUMsU0FBdkIsQ0FBTixDQUF5Q0MsT0FBekMsQ0FBaUQsVUFBakQ7QUFDQWxCLElBQUFBLE1BQU0sQ0FBQ0MsZ0JBQU9lLE9BQVAsQ0FBZUMsU0FBZixFQUFELENBQU4sQ0FBbUNFLGFBQW5DO0FBQ0FuQixJQUFBQSxNQUFNLENBQUMsT0FBT0MsZ0JBQU9lLE9BQVAsQ0FBZUksZ0JBQXZCLENBQU4sQ0FBZ0RGLE9BQWhELENBQXdELFVBQXhEO0FBQ0FsQixJQUFBQSxNQUFNLENBQUNDLGdCQUFPZSxPQUFQLENBQWVJLGdCQUFmLENBQWdDLEVBQWhDLENBQUQsQ0FBTixDQUE0Q0QsYUFBNUM7QUFDRCxHQUxDLENBQUY7QUFNRCxDQWxDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgeyBzaGFsbG93TW91bnQsIG1vdW50IH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJ1xuaW1wb3J0IEJvb3RzdHJhcFZ1ZSBmcm9tICdib290c3RyYXAtdnVlJ1xuaW1wb3J0IEFsZXJ0cyBmcm9tICdAL3ZpZXdzL25vdGlmaWNhdGlvbnMvQWxlcnRzJ1xuXG5WdWUudXNlKEJvb3RzdHJhcFZ1ZSlcblxuZGVzY3JpYmUoJ0FsZXJ0cy52dWUnLCAoKSA9PiB7XG4gIGl0KCdoYXMgYSBuYW1lJywgKCkgPT4ge1xuICAgIGV4cGVjdChBbGVydHMubmFtZSkudG9NYXRjaCgnYWxlcnRzJylcbiAgfSlcbiAgaXQoJ2hhcyBhIGNyZWF0ZWQgaG9vaycsICgpID0+IHtcbiAgICBleHBlY3QodHlwZW9mIEFsZXJ0cy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gIH0pXG4gIGl0KCdzZXRzIHRoZSBjb3JyZWN0IGRlZmF1bHQgZGF0YScsICgpID0+IHtcbiAgICBleHBlY3QodHlwZW9mIEFsZXJ0cy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gICAgY29uc3QgZGVmYXVsdERhdGEgPSBBbGVydHMuZGF0YSgpXG4gICAgZXhwZWN0KGRlZmF1bHREYXRhLnNob3dEaXNtaXNzaWJsZUFsZXJ0KS50b0JlKGZhbHNlKVxuICB9KVxuICBpdCgnaXMgVnVlIGluc3RhbmNlJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93TW91bnQoQWxlcnRzKVxuICAgIGV4cGVjdCh3cmFwcGVyLmlzVnVlSW5zdGFuY2UoKSkudG9CZSh0cnVlKVxuICB9KVxuICBpdCgnaXMgQWxlcnRzJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93TW91bnQoQWxlcnRzKVxuICAgIGV4cGVjdCh3cmFwcGVyLmlzKEFsZXJ0cykpLnRvQmUodHJ1ZSlcbiAgfSlcbiAgaXQoJ3Nob3VsZCByZW5kZXIgY29ycmVjdCBjb250ZW50JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChBbGVydHMpXG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnaGVhZGVyLmNhcmQtaGVhZGVyID4gZGl2JykudGV4dCgpKS50b01hdGNoKCdCb290c3RyYXAgQWxlcnQgZG9jcycpXG4gIH0pXG4gIHRlc3QoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChBbGVydHMpXG4gICAgZXhwZWN0KHdyYXBwZXIuZWxlbWVudCkudG9NYXRjaFNuYXBzaG90KClcbiAgfSlcbiAgaXQoJ3Nob3VsZCBoYXZlIG1ldGhvZHMnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHR5cGVvZiBBbGVydHMubWV0aG9kcy5zaG93QWxlcnQgKS50b0VxdWFsKCdmdW5jdGlvbicpXG4gICAgZXhwZWN0KEFsZXJ0cy5tZXRob2RzLnNob3dBbGVydCgpKS50b0JlVW5kZWZpbmVkKClcbiAgICBleHBlY3QodHlwZW9mIEFsZXJ0cy5tZXRob2RzLmNvdW50RG93bkNoYW5nZWQgKS50b0VxdWFsKCdmdW5jdGlvbicpXG4gICAgZXhwZWN0KEFsZXJ0cy5tZXRob2RzLmNvdW50RG93bkNoYW5nZWQoMTApKS50b0JlVW5kZWZpbmVkKClcbiAgfSlcbn0pXG4iXX0=