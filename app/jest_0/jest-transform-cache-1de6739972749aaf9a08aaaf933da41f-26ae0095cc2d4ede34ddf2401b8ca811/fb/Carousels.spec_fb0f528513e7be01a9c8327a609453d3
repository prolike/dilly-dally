64ed4be6df9a743d36717043bf04a629
"use strict";

var _interopRequireDefault = require("/home/oem/Desktop/Prolike/dilly-dally/app/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault");

var _vue = _interopRequireDefault(require("vue"));

var _testUtils = require("@vue/test-utils");

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

var _Carousels = _interopRequireDefault(require("@/views/base/Carousels"));

_vue.default.use(_bootstrapVue.default);

describe('Carousels.vue', () => {
  it('has a name', () => {
    expect(_Carousels.default.name).toMatch('carousels');
  });
  it('has a created hook', () => {
    expect(typeof _Carousels.default.data).toMatch('function');
  });
  it('sets the correct default data', () => {
    expect(typeof _Carousels.default.data).toMatch('function');

    const defaultData = _Carousels.default.data();

    expect(defaultData.slide).toBe(0);
  });
  it('is Vue instance', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Carousels.default);
    expect(wrapper.isVueInstance()).toBe(true);
  });
  it('is Carousels', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Carousels.default);
    expect(wrapper.is(_Carousels.default)).toBe(true);
  });
  it('should render correct content', () => {
    const wrapper = (0, _testUtils.mount)(_Carousels.default);
    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap Carousel');
  });
  test('renders correctly', () => {
    const wrapper = (0, _testUtils.mount)(_Carousels.default);
    expect(wrapper.element).toMatchSnapshot();
  });
  it('should have methods', () => {
    expect(typeof _Carousels.default.methods.onSlideStart).toEqual('function');
    expect(_Carousels.default.methods.onSlideStart(1)).toBeUndefined();
    expect(typeof _Carousels.default.methods.onSlideEnd).toEqual('function');
    expect(_Carousels.default.methods.onSlideEnd(1)).toBeUndefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhcm91c2Vscy5zcGVjLmpzIl0sIm5hbWVzIjpbIlZ1ZSIsInVzZSIsIkJvb3RzdHJhcFZ1ZSIsImRlc2NyaWJlIiwiaXQiLCJleHBlY3QiLCJDYXJvdXNlbHMiLCJuYW1lIiwidG9NYXRjaCIsImRhdGEiLCJkZWZhdWx0RGF0YSIsInNsaWRlIiwidG9CZSIsIndyYXBwZXIiLCJpc1Z1ZUluc3RhbmNlIiwiaXMiLCJmaW5kIiwidGV4dCIsInRlc3QiLCJlbGVtZW50IiwidG9NYXRjaFNuYXBzaG90IiwibWV0aG9kcyIsIm9uU2xpZGVTdGFydCIsInRvRXF1YWwiLCJ0b0JlVW5kZWZpbmVkIiwib25TbGlkZUVuZCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxhQUFJQyxHQUFKLENBQVFDLHFCQUFSOztBQUVBQyxRQUFRLENBQUMsZUFBRCxFQUFrQixNQUFNO0FBQzlCQyxFQUFBQSxFQUFFLENBQUMsWUFBRCxFQUFlLE1BQU07QUFDckJDLElBQUFBLE1BQU0sQ0FBQ0MsbUJBQVVDLElBQVgsQ0FBTixDQUF1QkMsT0FBdkIsQ0FBK0IsV0FBL0I7QUFDRCxHQUZDLENBQUY7QUFHQUosRUFBQUEsRUFBRSxDQUFDLG9CQUFELEVBQXVCLE1BQU07QUFDN0JDLElBQUFBLE1BQU0sQ0FBQyxPQUFPQyxtQkFBVUcsSUFBbEIsQ0FBTixDQUE4QkQsT0FBOUIsQ0FBc0MsVUFBdEM7QUFDRCxHQUZDLENBQUY7QUFHQUosRUFBQUEsRUFBRSxDQUFDLCtCQUFELEVBQWtDLE1BQU07QUFDeENDLElBQUFBLE1BQU0sQ0FBQyxPQUFPQyxtQkFBVUcsSUFBbEIsQ0FBTixDQUE4QkQsT0FBOUIsQ0FBc0MsVUFBdEM7O0FBQ0EsVUFBTUUsV0FBVyxHQUFHSixtQkFBVUcsSUFBVixFQUFwQjs7QUFDQUosSUFBQUEsTUFBTSxDQUFDSyxXQUFXLENBQUNDLEtBQWIsQ0FBTixDQUEwQkMsSUFBMUIsQ0FBK0IsQ0FBL0I7QUFDRCxHQUpDLENBQUY7QUFLQVIsRUFBQUEsRUFBRSxDQUFDLGlCQUFELEVBQW9CLE1BQU07QUFDMUIsVUFBTVMsT0FBTyxHQUFHLDZCQUFhUCxrQkFBYixDQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0MsYUFBUixFQUFELENBQU4sQ0FBZ0NGLElBQWhDLENBQXFDLElBQXJDO0FBQ0QsR0FIQyxDQUFGO0FBSUFSLEVBQUFBLEVBQUUsQ0FBQyxjQUFELEVBQWlCLE1BQU07QUFDdkIsVUFBTVMsT0FBTyxHQUFHLDZCQUFhUCxrQkFBYixDQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0UsRUFBUixDQUFXVCxrQkFBWCxDQUFELENBQU4sQ0FBOEJNLElBQTlCLENBQW1DLElBQW5DO0FBQ0QsR0FIQyxDQUFGO0FBSUFSLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3hDLFVBQU1TLE9BQU8sR0FBRyxzQkFBTVAsa0JBQU4sQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNHLElBQVIsQ0FBYSxtQ0FBYixFQUFrREMsSUFBbEQsRUFBRCxDQUFOLENBQWlFVCxPQUFqRSxDQUF5RSxvQkFBekU7QUFDRCxHQUhDLENBQUY7QUFJQVUsRUFBQUEsSUFBSSxDQUFDLG1CQUFELEVBQXNCLE1BQU07QUFDOUIsVUFBTUwsT0FBTyxHQUFHLHNCQUFNUCxrQkFBTixDQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ00sT0FBVCxDQUFOLENBQXdCQyxlQUF4QjtBQUNELEdBSEcsQ0FBSjtBQUlBaEIsRUFBQUEsRUFBRSxDQUFDLHFCQUFELEVBQXdCLE1BQU07QUFDOUJDLElBQUFBLE1BQU0sQ0FBQyxPQUFPQyxtQkFBVWUsT0FBVixDQUFrQkMsWUFBMUIsQ0FBTixDQUErQ0MsT0FBL0MsQ0FBdUQsVUFBdkQ7QUFDQWxCLElBQUFBLE1BQU0sQ0FBQ0MsbUJBQVVlLE9BQVYsQ0FBa0JDLFlBQWxCLENBQStCLENBQS9CLENBQUQsQ0FBTixDQUEwQ0UsYUFBMUM7QUFDQW5CLElBQUFBLE1BQU0sQ0FBQyxPQUFPQyxtQkFBVWUsT0FBVixDQUFrQkksVUFBMUIsQ0FBTixDQUE2Q0YsT0FBN0MsQ0FBcUQsVUFBckQ7QUFDQWxCLElBQUFBLE1BQU0sQ0FBQ0MsbUJBQVVlLE9BQVYsQ0FBa0JJLFVBQWxCLENBQTZCLENBQTdCLENBQUQsQ0FBTixDQUF3Q0QsYUFBeEM7QUFDRCxHQUxDLENBQUY7QUFNRCxDQWxDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgeyBzaGFsbG93TW91bnQsIG1vdW50IH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJ1xuaW1wb3J0IEJvb3RzdHJhcFZ1ZSBmcm9tICdib290c3RyYXAtdnVlJ1xuaW1wb3J0IENhcm91c2VscyBmcm9tICdAL3ZpZXdzL2Jhc2UvQ2Fyb3VzZWxzJ1xuXG5WdWUudXNlKEJvb3RzdHJhcFZ1ZSlcblxuZGVzY3JpYmUoJ0Nhcm91c2Vscy52dWUnLCAoKSA9PiB7XG4gIGl0KCdoYXMgYSBuYW1lJywgKCkgPT4ge1xuICAgIGV4cGVjdChDYXJvdXNlbHMubmFtZSkudG9NYXRjaCgnY2Fyb3VzZWxzJylcbiAgfSlcbiAgaXQoJ2hhcyBhIGNyZWF0ZWQgaG9vaycsICgpID0+IHtcbiAgICBleHBlY3QodHlwZW9mIENhcm91c2Vscy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gIH0pXG4gIGl0KCdzZXRzIHRoZSBjb3JyZWN0IGRlZmF1bHQgZGF0YScsICgpID0+IHtcbiAgICBleHBlY3QodHlwZW9mIENhcm91c2Vscy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gICAgY29uc3QgZGVmYXVsdERhdGEgPSBDYXJvdXNlbHMuZGF0YSgpXG4gICAgZXhwZWN0KGRlZmF1bHREYXRhLnNsaWRlKS50b0JlKDApXG4gIH0pXG4gIGl0KCdpcyBWdWUgaW5zdGFuY2UnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3dNb3VudChDYXJvdXNlbHMpXG4gICAgZXhwZWN0KHdyYXBwZXIuaXNWdWVJbnN0YW5jZSgpKS50b0JlKHRydWUpXG4gIH0pXG4gIGl0KCdpcyBDYXJvdXNlbHMnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3dNb3VudChDYXJvdXNlbHMpXG4gICAgZXhwZWN0KHdyYXBwZXIuaXMoQ2Fyb3VzZWxzKSkudG9CZSh0cnVlKVxuICB9KVxuICBpdCgnc2hvdWxkIHJlbmRlciBjb3JyZWN0IGNvbnRlbnQnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KENhcm91c2VscylcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCdoZWFkZXIuY2FyZC1oZWFkZXIgPiBkaXYgPiBzdHJvbmcnKS50ZXh0KCkpLnRvTWF0Y2goJ0Jvb3RzdHJhcCBDYXJvdXNlbCcpXG4gIH0pXG4gIHRlc3QoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChDYXJvdXNlbHMpXG4gICAgZXhwZWN0KHdyYXBwZXIuZWxlbWVudCkudG9NYXRjaFNuYXBzaG90KClcbiAgfSlcbiAgaXQoJ3Nob3VsZCBoYXZlIG1ldGhvZHMnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHR5cGVvZiBDYXJvdXNlbHMubWV0aG9kcy5vblNsaWRlU3RhcnQgKS50b0VxdWFsKCdmdW5jdGlvbicpXG4gICAgZXhwZWN0KENhcm91c2Vscy5tZXRob2RzLm9uU2xpZGVTdGFydCgxKSkudG9CZVVuZGVmaW5lZCgpXG4gICAgZXhwZWN0KHR5cGVvZiBDYXJvdXNlbHMubWV0aG9kcy5vblNsaWRlRW5kICkudG9FcXVhbCgnZnVuY3Rpb24nKVxuICAgIGV4cGVjdChDYXJvdXNlbHMubWV0aG9kcy5vblNsaWRlRW5kKDEpKS50b0JlVW5kZWZpbmVkKClcbiAgfSlcbn0pXG4iXX0=