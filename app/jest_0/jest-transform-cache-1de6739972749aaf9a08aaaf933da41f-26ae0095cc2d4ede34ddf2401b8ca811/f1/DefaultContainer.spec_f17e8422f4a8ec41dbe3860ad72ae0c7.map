{"version":3,"sources":["DefaultContainer.spec.js"],"names":["localVue","use","VueRouter","router","BootstrapVue","describe","it","expect","DefaultContainer","name","toMatch","data","test","wrapper","element","toMatchSnapshot","defaultData","nav","isVueInstance","toBe"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAMA,QAAQ,GAAG,gCAAjB;AACAA,QAAQ,CAACC,GAAT,CAAaC,kBAAb;AACA,MAAMC,MAAM,GAAG,IAAID,kBAAJ,EAAf;AAEAF,QAAQ,CAACC,GAAT,CAAaG,qBAAb;AAEAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACrCC,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,IAAAA,MAAM,CAACC,0BAAiBC,IAAlB,CAAN,CAA8BC,OAA9B,CAAsC,kBAAtC;AACD,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7BC,IAAAA,MAAM,CAAC,OAAOC,0BAAiBG,IAAzB,CAAN,CAAqCD,OAArC,CAA6C,UAA7C;AACD,GAFC,CAAF;AAGAE,EAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,UAAMC,OAAO,GAAG,6BAAaL,yBAAb,EAA+B;AAC7CR,MAAAA,QAD6C;AAE3CG,MAAAA;AAF2C,KAA/B,CAAhB;AAIAI,IAAAA,MAAM,CAACM,OAAO,CAACC,OAAT,CAAN,CAAwBC,eAAxB;AACD,GANG,CAAJ;AAOAT,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxCC,IAAAA,MAAM,CAAC,OAAOC,0BAAiBG,IAAzB,CAAN,CAAqCD,OAArC,CAA6C,UAA7C;;AACA,UAAMM,WAAW,GAAGR,0BAAiBG,IAAjB,EAApB;;AACAJ,IAAAA,MAAM,CAAC,OAAOS,WAAW,CAACC,GAApB,CAAN,CAA+BP,OAA/B,CAAuC,QAAvC;AACD,GAJC,CAAF;AAKAJ,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMO,OAAO,GAAG,6BAAaL,yBAAb,EAA+B;AAC7CR,MAAAA,QAD6C;AAE7CG,MAAAA;AAF6C,KAA/B,CAAhB;AAIAI,IAAAA,MAAM,CAACM,OAAO,CAACK,aAAR,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,IAArC;AACD,GANC,CAAF;AAOD,CA1BO,CAAR","sourcesContent":["import BootstrapVue from 'bootstrap-vue'\nimport { shallowMount, createLocalVue } from '@vue/test-utils';\nimport VueRouter from 'vue-router'\nimport DefaultContainer from '@/containers/DefaultContainer'\n\nconst localVue = createLocalVue()\nlocalVue.use(VueRouter)\nconst router = new VueRouter()\n\nlocalVue.use(BootstrapVue)\n\ndescribe('DefaultContainer.vue', () => {\n  it('has a name', () => {\n    expect(DefaultContainer.name).toMatch('DefaultContainer')\n  })\n  it('has a created hook', () => {\n    expect(typeof DefaultContainer.data).toMatch('function')\n  })\n  test('renders correctly', () => {\n    const wrapper = shallowMount(DefaultContainer, {\n      localVue,\n        router\n    })\n    expect(wrapper.element).toMatchSnapshot()\n  })\n  it('sets the correct default data', () => {\n    expect(typeof DefaultContainer.data).toMatch('function')\n    const defaultData = DefaultContainer.data()\n    expect(typeof defaultData.nav).toMatch('object')\n  })\n  it('is Vue instance', () => {\n    const wrapper = shallowMount(DefaultContainer, {\n      localVue,\n      router\n    })\n    expect(wrapper.isVueInstance()).toBe(true)\n  })\n})\n"]}