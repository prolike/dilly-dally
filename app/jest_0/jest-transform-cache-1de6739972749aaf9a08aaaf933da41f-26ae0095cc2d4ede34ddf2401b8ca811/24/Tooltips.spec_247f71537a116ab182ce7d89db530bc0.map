{"version":3,"sources":["Tooltips.spec.js"],"names":["Vue","use","BootstrapVue","describe","it","expect","Tooltips","name","toMatch","data","defaultData","show","toBe","disabled","wrapper","isVueInstance","is","find","text","test","element","toMatchSnapshot","methods","onOpen","toEqual","vm","toBeUndefined","onClose","disableByRef"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport { mount, shallowMount } from '@vue/test-utils';\nimport BootstrapVue from 'bootstrap-vue'\nimport Tooltips from '@/views/base/Tooltips'\n\nVue.use(BootstrapVue)\n\ndescribe('Tooltips.vue', () => {\n  it('has a name', () => {\n    expect(Tooltips.name).toMatch('tooltips')\n  })\n  it('has a created hook', () => {\n    expect(typeof Tooltips.data).toMatch('function')\n  })\n  it('sets the correct default data', () => {\n    expect(typeof Tooltips.data).toMatch('function')\n    const defaultData = Tooltips.data()\n    expect(defaultData.show).toBe(true)\n    expect(defaultData.disabled).toBe(false)\n  })\n  it('is Vue instance', () => {\n    const wrapper = shallowMount(Tooltips)\n    expect(wrapper.isVueInstance()).toBe(true)\n  })\n  it('is Tooltips', () => {\n    const wrapper = shallowMount(Tooltips)\n    expect(wrapper.is(Tooltips)).toBe(true)\n  })\n  it('should render correct content', () => {\n    const wrapper = mount(Tooltips)\n    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap Tooltips')\n  })\n  test('renders correctly', () => {\n    const wrapper = shallowMount(Tooltips)\n    expect(wrapper.element).toMatchSnapshot()\n  })\n  it('should have methods', () => {\n    const wrapper = mount(Tooltips)\n    expect(typeof Tooltips.methods.onOpen).toEqual('function')\n    expect(wrapper.vm.onOpen()).toBeUndefined()\n    expect(typeof Tooltips.methods.onClose).toEqual('function')\n    expect(wrapper.vm.onClose()).toBeUndefined()\n    expect(typeof Tooltips.methods.disableByRef).toEqual('function')\n    expect(wrapper.vm.disableByRef()).toBeUndefined()\n    wrapper.vm.disabled = true\n    expect(wrapper.vm.disableByRef()).toBeUndefined()\n  })\n})\n"]}