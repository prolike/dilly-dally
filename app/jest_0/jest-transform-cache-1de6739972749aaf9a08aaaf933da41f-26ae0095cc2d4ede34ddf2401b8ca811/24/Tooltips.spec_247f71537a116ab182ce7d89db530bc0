c3742a687fe547e032a133a592e9b35b
"use strict";

var _interopRequireDefault = require("/home/oem/Desktop/Prolike/dilly-dally/app/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault");

var _vue = _interopRequireDefault(require("vue"));

var _testUtils = require("@vue/test-utils");

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

var _Tooltips = _interopRequireDefault(require("@/views/base/Tooltips"));

_vue.default.use(_bootstrapVue.default);

describe('Tooltips.vue', () => {
  it('has a name', () => {
    expect(_Tooltips.default.name).toMatch('tooltips');
  });
  it('has a created hook', () => {
    expect(typeof _Tooltips.default.data).toMatch('function');
  });
  it('sets the correct default data', () => {
    expect(typeof _Tooltips.default.data).toMatch('function');

    const defaultData = _Tooltips.default.data();

    expect(defaultData.show).toBe(true);
    expect(defaultData.disabled).toBe(false);
  });
  it('is Vue instance', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Tooltips.default);
    expect(wrapper.isVueInstance()).toBe(true);
  });
  it('is Tooltips', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Tooltips.default);
    expect(wrapper.is(_Tooltips.default)).toBe(true);
  });
  it('should render correct content', () => {
    const wrapper = (0, _testUtils.mount)(_Tooltips.default);
    expect(wrapper.find('header.card-header > div > strong').text()).toMatch('Bootstrap Tooltips');
  });
  test('renders correctly', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Tooltips.default);
    expect(wrapper.element).toMatchSnapshot();
  });
  it('should have methods', () => {
    const wrapper = (0, _testUtils.mount)(_Tooltips.default);
    expect(typeof _Tooltips.default.methods.onOpen).toEqual('function');
    expect(wrapper.vm.onOpen()).toBeUndefined();
    expect(typeof _Tooltips.default.methods.onClose).toEqual('function');
    expect(wrapper.vm.onClose()).toBeUndefined();
    expect(typeof _Tooltips.default.methods.disableByRef).toEqual('function');
    expect(wrapper.vm.disableByRef()).toBeUndefined();
    wrapper.vm.disabled = true;
    expect(wrapper.vm.disableByRef()).toBeUndefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvb2x0aXBzLnNwZWMuanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiQm9vdHN0cmFwVnVlIiwiZGVzY3JpYmUiLCJpdCIsImV4cGVjdCIsIlRvb2x0aXBzIiwibmFtZSIsInRvTWF0Y2giLCJkYXRhIiwiZGVmYXVsdERhdGEiLCJzaG93IiwidG9CZSIsImRpc2FibGVkIiwid3JhcHBlciIsImlzVnVlSW5zdGFuY2UiLCJpcyIsImZpbmQiLCJ0ZXh0IiwidGVzdCIsImVsZW1lbnQiLCJ0b01hdGNoU25hcHNob3QiLCJtZXRob2RzIiwib25PcGVuIiwidG9FcXVhbCIsInZtIiwidG9CZVVuZGVmaW5lZCIsIm9uQ2xvc2UiLCJkaXNhYmxlQnlSZWYiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQUEsYUFBSUMsR0FBSixDQUFRQyxxQkFBUjs7QUFFQUMsUUFBUSxDQUFDLGNBQUQsRUFBaUIsTUFBTTtBQUM3QkMsRUFBQUEsRUFBRSxDQUFDLFlBQUQsRUFBZSxNQUFNO0FBQ3JCQyxJQUFBQSxNQUFNLENBQUNDLGtCQUFTQyxJQUFWLENBQU4sQ0FBc0JDLE9BQXRCLENBQThCLFVBQTlCO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQyxvQkFBRCxFQUF1QixNQUFNO0FBQzdCQyxJQUFBQSxNQUFNLENBQUMsT0FBT0Msa0JBQVNHLElBQWpCLENBQU4sQ0FBNkJELE9BQTdCLENBQXFDLFVBQXJDO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3hDQyxJQUFBQSxNQUFNLENBQUMsT0FBT0Msa0JBQVNHLElBQWpCLENBQU4sQ0FBNkJELE9BQTdCLENBQXFDLFVBQXJDOztBQUNBLFVBQU1FLFdBQVcsR0FBR0osa0JBQVNHLElBQVQsRUFBcEI7O0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDQyxJQUFiLENBQU4sQ0FBeUJDLElBQXpCLENBQThCLElBQTlCO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDRyxRQUFiLENBQU4sQ0FBNkJELElBQTdCLENBQWtDLEtBQWxDO0FBQ0QsR0FMQyxDQUFGO0FBTUFSLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixNQUFNO0FBQzFCLFVBQU1VLE9BQU8sR0FBRyw2QkFBYVIsaUJBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUyxPQUFPLENBQUNDLGFBQVIsRUFBRCxDQUFOLENBQWdDSCxJQUFoQyxDQUFxQyxJQUFyQztBQUNELEdBSEMsQ0FBRjtBQUlBUixFQUFBQSxFQUFFLENBQUMsYUFBRCxFQUFnQixNQUFNO0FBQ3RCLFVBQU1VLE9BQU8sR0FBRyw2QkFBYVIsaUJBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUyxPQUFPLENBQUNFLEVBQVIsQ0FBV1YsaUJBQVgsQ0FBRCxDQUFOLENBQTZCTSxJQUE3QixDQUFrQyxJQUFsQztBQUNELEdBSEMsQ0FBRjtBQUlBUixFQUFBQSxFQUFFLENBQUMsK0JBQUQsRUFBa0MsTUFBTTtBQUN4QyxVQUFNVSxPQUFPLEdBQUcsc0JBQU1SLGlCQUFOLENBQWhCO0FBQ0FELElBQUFBLE1BQU0sQ0FBQ1MsT0FBTyxDQUFDRyxJQUFSLENBQWEsbUNBQWIsRUFBa0RDLElBQWxELEVBQUQsQ0FBTixDQUFpRVYsT0FBakUsQ0FBeUUsb0JBQXpFO0FBQ0QsR0FIQyxDQUFGO0FBSUFXLEVBQUFBLElBQUksQ0FBQyxtQkFBRCxFQUFzQixNQUFNO0FBQzlCLFVBQU1MLE9BQU8sR0FBRyw2QkFBYVIsaUJBQWIsQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDUyxPQUFPLENBQUNNLE9BQVQsQ0FBTixDQUF3QkMsZUFBeEI7QUFDRCxHQUhHLENBQUo7QUFJQWpCLEVBQUFBLEVBQUUsQ0FBQyxxQkFBRCxFQUF3QixNQUFNO0FBQzlCLFVBQU1VLE9BQU8sR0FBRyxzQkFBTVIsaUJBQU4sQ0FBaEI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGtCQUFTZ0IsT0FBVCxDQUFpQkMsTUFBekIsQ0FBTixDQUF1Q0MsT0FBdkMsQ0FBK0MsVUFBL0M7QUFDQW5CLElBQUFBLE1BQU0sQ0FBQ1MsT0FBTyxDQUFDVyxFQUFSLENBQVdGLE1BQVgsRUFBRCxDQUFOLENBQTRCRyxhQUE1QjtBQUNBckIsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGtCQUFTZ0IsT0FBVCxDQUFpQkssT0FBekIsQ0FBTixDQUF3Q0gsT0FBeEMsQ0FBZ0QsVUFBaEQ7QUFDQW5CLElBQUFBLE1BQU0sQ0FBQ1MsT0FBTyxDQUFDVyxFQUFSLENBQVdFLE9BQVgsRUFBRCxDQUFOLENBQTZCRCxhQUE3QjtBQUNBckIsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGtCQUFTZ0IsT0FBVCxDQUFpQk0sWUFBekIsQ0FBTixDQUE2Q0osT0FBN0MsQ0FBcUQsVUFBckQ7QUFDQW5CLElBQUFBLE1BQU0sQ0FBQ1MsT0FBTyxDQUFDVyxFQUFSLENBQVdHLFlBQVgsRUFBRCxDQUFOLENBQWtDRixhQUFsQztBQUNBWixJQUFBQSxPQUFPLENBQUNXLEVBQVIsQ0FBV1osUUFBWCxHQUFzQixJQUF0QjtBQUNBUixJQUFBQSxNQUFNLENBQUNTLE9BQU8sQ0FBQ1csRUFBUixDQUFXRyxZQUFYLEVBQUQsQ0FBTixDQUFrQ0YsYUFBbEM7QUFDRCxHQVZDLENBQUY7QUFXRCxDQXhDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgeyBtb3VudCwgc2hhbGxvd01vdW50IH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJztcbmltcG9ydCBCb290c3RyYXBWdWUgZnJvbSAnYm9vdHN0cmFwLXZ1ZSdcbmltcG9ydCBUb29sdGlwcyBmcm9tICdAL3ZpZXdzL2Jhc2UvVG9vbHRpcHMnXG5cblZ1ZS51c2UoQm9vdHN0cmFwVnVlKVxuXG5kZXNjcmliZSgnVG9vbHRpcHMudnVlJywgKCkgPT4ge1xuICBpdCgnaGFzIGEgbmFtZScsICgpID0+IHtcbiAgICBleHBlY3QoVG9vbHRpcHMubmFtZSkudG9NYXRjaCgndG9vbHRpcHMnKVxuICB9KVxuICBpdCgnaGFzIGEgY3JlYXRlZCBob29rJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0eXBlb2YgVG9vbHRpcHMuZGF0YSkudG9NYXRjaCgnZnVuY3Rpb24nKVxuICB9KVxuICBpdCgnc2V0cyB0aGUgY29ycmVjdCBkZWZhdWx0IGRhdGEnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHR5cGVvZiBUb29sdGlwcy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gICAgY29uc3QgZGVmYXVsdERhdGEgPSBUb29sdGlwcy5kYXRhKClcbiAgICBleHBlY3QoZGVmYXVsdERhdGEuc2hvdykudG9CZSh0cnVlKVxuICAgIGV4cGVjdChkZWZhdWx0RGF0YS5kaXNhYmxlZCkudG9CZShmYWxzZSlcbiAgfSlcbiAgaXQoJ2lzIFZ1ZSBpbnN0YW5jZScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2hhbGxvd01vdW50KFRvb2x0aXBzKVxuICAgIGV4cGVjdCh3cmFwcGVyLmlzVnVlSW5zdGFuY2UoKSkudG9CZSh0cnVlKVxuICB9KVxuICBpdCgnaXMgVG9vbHRpcHMnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3dNb3VudChUb29sdGlwcylcbiAgICBleHBlY3Qod3JhcHBlci5pcyhUb29sdGlwcykpLnRvQmUodHJ1ZSlcbiAgfSlcbiAgaXQoJ3Nob3VsZCByZW5kZXIgY29ycmVjdCBjb250ZW50JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChUb29sdGlwcylcbiAgICBleHBlY3Qod3JhcHBlci5maW5kKCdoZWFkZXIuY2FyZC1oZWFkZXIgPiBkaXYgPiBzdHJvbmcnKS50ZXh0KCkpLnRvTWF0Y2goJ0Jvb3RzdHJhcCBUb29sdGlwcycpXG4gIH0pXG4gIHRlc3QoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93TW91bnQoVG9vbHRpcHMpXG4gICAgZXhwZWN0KHdyYXBwZXIuZWxlbWVudCkudG9NYXRjaFNuYXBzaG90KClcbiAgfSlcbiAgaXQoJ3Nob3VsZCBoYXZlIG1ldGhvZHMnLCAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KFRvb2x0aXBzKVxuICAgIGV4cGVjdCh0eXBlb2YgVG9vbHRpcHMubWV0aG9kcy5vbk9wZW4pLnRvRXF1YWwoJ2Z1bmN0aW9uJylcbiAgICBleHBlY3Qod3JhcHBlci52bS5vbk9wZW4oKSkudG9CZVVuZGVmaW5lZCgpXG4gICAgZXhwZWN0KHR5cGVvZiBUb29sdGlwcy5tZXRob2RzLm9uQ2xvc2UpLnRvRXF1YWwoJ2Z1bmN0aW9uJylcbiAgICBleHBlY3Qod3JhcHBlci52bS5vbkNsb3NlKCkpLnRvQmVVbmRlZmluZWQoKVxuICAgIGV4cGVjdCh0eXBlb2YgVG9vbHRpcHMubWV0aG9kcy5kaXNhYmxlQnlSZWYpLnRvRXF1YWwoJ2Z1bmN0aW9uJylcbiAgICBleHBlY3Qod3JhcHBlci52bS5kaXNhYmxlQnlSZWYoKSkudG9CZVVuZGVmaW5lZCgpXG4gICAgd3JhcHBlci52bS5kaXNhYmxlZCA9IHRydWVcbiAgICBleHBlY3Qod3JhcHBlci52bS5kaXNhYmxlQnlSZWYoKSkudG9CZVVuZGVmaW5lZCgpXG4gIH0pXG59KVxuIl19