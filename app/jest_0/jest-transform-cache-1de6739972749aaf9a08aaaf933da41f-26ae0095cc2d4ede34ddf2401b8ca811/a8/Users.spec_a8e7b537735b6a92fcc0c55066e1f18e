59b0dfb314b01919f19bcf885569c37d
"use strict";

var _interopRequireDefault = require("/home/oem/Desktop/Prolike/dilly-dally/app/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault");

var _testUtils = require("@vue/test-utils");

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

var _Users = _interopRequireDefault(require("@/views/users/Users"));

var _vueRouter = _interopRequireDefault(require("vue-router"));

const localVue = (0, _testUtils.createLocalVue)();
localVue.use(_vueRouter.default);
const router = new _vueRouter.default();
localVue.use(_bootstrapVue.default);
describe('Users.vue', () => {
  it('has a name', () => {
    expect(_Users.default.name).toMatch('Users');
  });
  it('has a created hook', () => {
    expect(typeof _Users.default.data).toMatch('function');
  });
  it('sets the correct default data', () => {
    expect(typeof _Users.default.data).toMatch('function');

    const defaultData = _Users.default.data();

    expect(defaultData.currentPage).toBe(1);
  });
  it('is Vue instance', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Users.default, {
      localVue,
      router
    });
    expect(wrapper.isVueInstance()).toBe(true);
  });
  it('is Users', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Users.default, {
      localVue,
      router
    });
    expect(wrapper.is(_Users.default)).toBe(true);
  });
  it('renders props.caption when passed', () => {
    const caption = 'Users List';
    const wrapper = (0, _testUtils.mount)(_Users.default, {
      propsData: {
        caption
      },
      localVue,
      router
    });
    expect(wrapper.find('div.card-header > div').text()).toMatch(caption);
  });
  test('renders correctly', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Users.default, {
      localVue,
      router
    });
    expect(wrapper.element).toMatchSnapshot();
  });
  it('should have methods', () => {
    const wrapper = (0, _testUtils.shallowMount)(_Users.default, {
      localVue,
      router
    });
    expect(typeof _Users.default.methods.userLink).toEqual('function');
    expect(_Users.default.methods.userLink(42)).toBe('users/42');
    expect(typeof _Users.default.methods.rowClicked).toEqual('function');
    expect(wrapper.vm.rowClicked({
      id: 42
    })).toBeUndefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzLnNwZWMuanMiXSwibmFtZXMiOlsibG9jYWxWdWUiLCJ1c2UiLCJWdWVSb3V0ZXIiLCJyb3V0ZXIiLCJCb290c3RyYXBWdWUiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwiVXNlcnMiLCJuYW1lIiwidG9NYXRjaCIsImRhdGEiLCJkZWZhdWx0RGF0YSIsImN1cnJlbnRQYWdlIiwidG9CZSIsIndyYXBwZXIiLCJpc1Z1ZUluc3RhbmNlIiwiaXMiLCJjYXB0aW9uIiwicHJvcHNEYXRhIiwiZmluZCIsInRleHQiLCJ0ZXN0IiwiZWxlbWVudCIsInRvTWF0Y2hTbmFwc2hvdCIsIm1ldGhvZHMiLCJ1c2VyTGluayIsInRvRXF1YWwiLCJyb3dDbGlja2VkIiwidm0iLCJpZCIsInRvQmVVbmRlZmluZWQiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxNQUFNQSxRQUFRLEdBQUcsZ0NBQWpCO0FBQ0FBLFFBQVEsQ0FBQ0MsR0FBVCxDQUFhQyxrQkFBYjtBQUNBLE1BQU1DLE1BQU0sR0FBRyxJQUFJRCxrQkFBSixFQUFmO0FBRUFGLFFBQVEsQ0FBQ0MsR0FBVCxDQUFhRyxxQkFBYjtBQUVBQyxRQUFRLENBQUMsV0FBRCxFQUFjLE1BQU07QUFDMUJDLEVBQUFBLEVBQUUsQ0FBQyxZQUFELEVBQWUsTUFBTTtBQUNyQkMsSUFBQUEsTUFBTSxDQUFDQyxlQUFNQyxJQUFQLENBQU4sQ0FBbUJDLE9BQW5CLENBQTJCLE9BQTNCO0FBQ0QsR0FGQyxDQUFGO0FBR0FKLEVBQUFBLEVBQUUsQ0FBQyxvQkFBRCxFQUF1QixNQUFNO0FBQzdCQyxJQUFBQSxNQUFNLENBQUMsT0FBT0MsZUFBTUcsSUFBZCxDQUFOLENBQTBCRCxPQUExQixDQUFrQyxVQUFsQztBQUNELEdBRkMsQ0FBRjtBQUdBSixFQUFBQSxFQUFFLENBQUMsK0JBQUQsRUFBa0MsTUFBTTtBQUN4Q0MsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGVBQU1HLElBQWQsQ0FBTixDQUEwQkQsT0FBMUIsQ0FBa0MsVUFBbEM7O0FBQ0EsVUFBTUUsV0FBVyxHQUFHSixlQUFNRyxJQUFOLEVBQXBCOztBQUNBSixJQUFBQSxNQUFNLENBQUNLLFdBQVcsQ0FBQ0MsV0FBYixDQUFOLENBQWdDQyxJQUFoQyxDQUFxQyxDQUFyQztBQUNELEdBSkMsQ0FBRjtBQUtBUixFQUFBQSxFQUFFLENBQUMsaUJBQUQsRUFBb0IsTUFBTTtBQUMxQixVQUFNUyxPQUFPLEdBQUcsNkJBQWFQLGNBQWIsRUFBbUI7QUFDakNSLE1BQUFBLFFBRGlDO0FBRWpDRyxNQUFBQTtBQUZpQyxLQUFuQixDQUFoQjtBQUlBSSxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0MsYUFBUixFQUFELENBQU4sQ0FBZ0NGLElBQWhDLENBQXFDLElBQXJDO0FBQ0QsR0FOQyxDQUFGO0FBT0FSLEVBQUFBLEVBQUUsQ0FBQyxVQUFELEVBQWEsTUFBTTtBQUNuQixVQUFNUyxPQUFPLEdBQUcsNkJBQWFQLGNBQWIsRUFBbUI7QUFDakNSLE1BQUFBLFFBRGlDO0FBRWpDRyxNQUFBQTtBQUZpQyxLQUFuQixDQUFoQjtBQUlBSSxJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ0UsRUFBUixDQUFXVCxjQUFYLENBQUQsQ0FBTixDQUEwQk0sSUFBMUIsQ0FBK0IsSUFBL0I7QUFDRCxHQU5DLENBQUY7QUFPQVIsRUFBQUEsRUFBRSxDQUFDLG1DQUFELEVBQXNDLE1BQU07QUFDNUMsVUFBTVksT0FBTyxHQUFHLFlBQWhCO0FBQ0EsVUFBTUgsT0FBTyxHQUFHLHNCQUFNUCxjQUFOLEVBQWE7QUFDM0JXLE1BQUFBLFNBQVMsRUFBRTtBQUFFRCxRQUFBQTtBQUFGLE9BRGdCO0FBRTNCbEIsTUFBQUEsUUFGMkI7QUFHM0JHLE1BQUFBO0FBSDJCLEtBQWIsQ0FBaEI7QUFLQUksSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNLLElBQVIsQ0FBYSx1QkFBYixFQUFzQ0MsSUFBdEMsRUFBRCxDQUFOLENBQXFEWCxPQUFyRCxDQUE2RFEsT0FBN0Q7QUFDRCxHQVJDLENBQUY7QUFTQUksRUFBQUEsSUFBSSxDQUFDLG1CQUFELEVBQXNCLE1BQU07QUFDOUIsVUFBTVAsT0FBTyxHQUFHLDZCQUFhUCxjQUFiLEVBQW9CO0FBQ2xDUixNQUFBQSxRQURrQztBQUVsQ0csTUFBQUE7QUFGa0MsS0FBcEIsQ0FBaEI7QUFJQUksSUFBQUEsTUFBTSxDQUFDUSxPQUFPLENBQUNRLE9BQVQsQ0FBTixDQUF3QkMsZUFBeEI7QUFDRCxHQU5HLENBQUo7QUFPQWxCLEVBQUFBLEVBQUUsQ0FBQyxxQkFBRCxFQUF3QixNQUFNO0FBQzlCLFVBQU1TLE9BQU8sR0FBRyw2QkFBYVAsY0FBYixFQUFtQjtBQUNqQ1IsTUFBQUEsUUFEaUM7QUFFakNHLE1BQUFBO0FBRmlDLEtBQW5CLENBQWhCO0FBS0FJLElBQUFBLE1BQU0sQ0FBQyxPQUFPQyxlQUFNaUIsT0FBTixDQUFjQyxRQUF0QixDQUFOLENBQXdDQyxPQUF4QyxDQUFnRCxVQUFoRDtBQUNBcEIsSUFBQUEsTUFBTSxDQUFDQyxlQUFNaUIsT0FBTixDQUFjQyxRQUFkLENBQXVCLEVBQXZCLENBQUQsQ0FBTixDQUFtQ1osSUFBbkMsQ0FBd0MsVUFBeEM7QUFDQVAsSUFBQUEsTUFBTSxDQUFDLE9BQU9DLGVBQU1pQixPQUFOLENBQWNHLFVBQXRCLENBQU4sQ0FBeUNELE9BQXpDLENBQWlELFVBQWpEO0FBQ0FwQixJQUFBQSxNQUFNLENBQUNRLE9BQU8sQ0FBQ2MsRUFBUixDQUFXRCxVQUFYLENBQXNCO0FBQUNFLE1BQUFBLEVBQUUsRUFBQztBQUFKLEtBQXRCLENBQUQsQ0FBTixDQUF1Q0MsYUFBdkM7QUFDRCxHQVZDLENBQUY7QUFXRCxDQXJETyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTG9jYWxWdWUsIHNoYWxsb3dNb3VudCwgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnXG5pbXBvcnQgQm9vdHN0cmFwVnVlIGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgVXNlcnMgZnJvbSAnQC92aWV3cy91c2Vycy9Vc2VycydcbmltcG9ydCBWdWVSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7XG5cbmNvbnN0IGxvY2FsVnVlID0gY3JlYXRlTG9jYWxWdWUoKVxubG9jYWxWdWUudXNlKFZ1ZVJvdXRlcilcbmNvbnN0IHJvdXRlciA9IG5ldyBWdWVSb3V0ZXIoKVxuXG5sb2NhbFZ1ZS51c2UoQm9vdHN0cmFwVnVlKVxuXG5kZXNjcmliZSgnVXNlcnMudnVlJywgKCkgPT4ge1xuICBpdCgnaGFzIGEgbmFtZScsICgpID0+IHtcbiAgICBleHBlY3QoVXNlcnMubmFtZSkudG9NYXRjaCgnVXNlcnMnKVxuICB9KVxuICBpdCgnaGFzIGEgY3JlYXRlZCBob29rJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0eXBlb2YgVXNlcnMuZGF0YSkudG9NYXRjaCgnZnVuY3Rpb24nKVxuICB9KVxuICBpdCgnc2V0cyB0aGUgY29ycmVjdCBkZWZhdWx0IGRhdGEnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHR5cGVvZiBVc2Vycy5kYXRhKS50b01hdGNoKCdmdW5jdGlvbicpXG4gICAgY29uc3QgZGVmYXVsdERhdGEgPSBVc2Vycy5kYXRhKClcbiAgICBleHBlY3QoZGVmYXVsdERhdGEuY3VycmVudFBhZ2UpLnRvQmUoMSlcbiAgfSlcbiAgaXQoJ2lzIFZ1ZSBpbnN0YW5jZScsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2hhbGxvd01vdW50KFVzZXJzLHtcbiAgICAgIGxvY2FsVnVlLFxuICAgICAgcm91dGVyXG4gICAgfSlcbiAgICBleHBlY3Qod3JhcHBlci5pc1Z1ZUluc3RhbmNlKCkpLnRvQmUodHJ1ZSlcbiAgfSlcbiAgaXQoJ2lzIFVzZXJzJywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93TW91bnQoVXNlcnMse1xuICAgICAgbG9jYWxWdWUsXG4gICAgICByb3V0ZXJcbiAgICB9KVxuICAgIGV4cGVjdCh3cmFwcGVyLmlzKFVzZXJzKSkudG9CZSh0cnVlKVxuICB9KVxuICBpdCgncmVuZGVycyBwcm9wcy5jYXB0aW9uIHdoZW4gcGFzc2VkJywgKCkgPT4ge1xuICAgIGNvbnN0IGNhcHRpb24gPSAnVXNlcnMgTGlzdCdcbiAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoVXNlcnMsIHtcbiAgICAgIHByb3BzRGF0YTogeyBjYXB0aW9uIH0sXG4gICAgICBsb2NhbFZ1ZSxcbiAgICAgIHJvdXRlclxuICAgIH0pXG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnZGl2LmNhcmQtaGVhZGVyID4gZGl2JykudGV4dCgpKS50b01hdGNoKGNhcHRpb24pXG4gIH0pXG4gIHRlc3QoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93TW91bnQoVXNlcnMsIHtcbiAgICAgIGxvY2FsVnVlLFxuICAgICAgcm91dGVyXG4gICAgfSlcbiAgICBleHBlY3Qod3JhcHBlci5lbGVtZW50KS50b01hdGNoU25hcHNob3QoKVxuICB9KVxuICBpdCgnc2hvdWxkIGhhdmUgbWV0aG9kcycsICgpID0+IHtcbiAgICBjb25zdCB3cmFwcGVyID0gc2hhbGxvd01vdW50KFVzZXJzLHtcbiAgICAgIGxvY2FsVnVlLFxuICAgICAgcm91dGVyXG4gICAgfSlcblxuICAgIGV4cGVjdCh0eXBlb2YgVXNlcnMubWV0aG9kcy51c2VyTGluayAgKS50b0VxdWFsKCdmdW5jdGlvbicpXG4gICAgZXhwZWN0KFVzZXJzLm1ldGhvZHMudXNlckxpbmsoNDIpKS50b0JlKCd1c2Vycy80MicpXG4gICAgZXhwZWN0KHR5cGVvZiBVc2Vycy5tZXRob2RzLnJvd0NsaWNrZWQgKS50b0VxdWFsKCdmdW5jdGlvbicpXG4gICAgZXhwZWN0KHdyYXBwZXIudm0ucm93Q2xpY2tlZCh7aWQ6NDJ9KSkudG9CZVVuZGVmaW5lZCgpXG4gIH0pXG59KVxuIl19